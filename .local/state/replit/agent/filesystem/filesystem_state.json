{"file_contents":{"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/pages/PlayerDashboard.tsx":{"content":"import { useAuth } from \"@/hooks/useAuth\";\nimport { useEffect } from \"react\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Avatar, AvatarImage, AvatarFallback } from \"@/components/ui/avatar\";\nimport { Trophy, DollarSign, FileText, User, Calendar, TrendingUp } from \"lucide-react\";\nimport type { PlayerProfile, AccountReceivable, User as UserType } from \"@shared/schema\";\n\ntype PlayerWithUser = PlayerProfile & { user: UserType };\n\nexport default function PlayerDashboard() {\n  const { toast } = useToast();\n  const { user, isAuthenticated, isLoading } = useAuth();\n\n  useEffect(() => {\n    if (!isLoading && !isAuthenticated) {\n      toast({\n        title: \"No autorizado\",\n        description: \"Iniciando sesión...\",\n        variant: \"destructive\",\n      });\n      setTimeout(() => {\n        window.location.href = \"/api/login\";\n      }, 500);\n    }\n  }, [isAuthenticated, isLoading, toast]);\n\n  const { data: profile } = useQuery<PlayerWithUser>({\n    queryKey: [\"/api/player/profile\"],\n    enabled: isAuthenticated,\n  });\n\n  const { data: accounts = [] } = useQuery<AccountReceivable[]>({\n    queryKey: [\"/api/player/accounts\"],\n    enabled: isAuthenticated,\n  });\n\n  if (isLoading || !isAuthenticated || !user) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary mx-auto mb-4\" />\n          <p className=\"text-muted-foreground\">Cargando...</p>\n        </div>\n      </div>\n    );\n  }\n\n  const pendingBalance = accounts\n    .filter((a) => a.status === \"pending\" || a.status === \"overdue\")\n    .reduce((sum, a) => sum + parseFloat(a.amount), 0);\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* Header */}\n      <header className=\"border-b bg-card\">\n        <div className=\"container mx-auto px-4 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <h1 className=\"text-2xl font-bold\">Panel de Jugador</h1>\n            <div className=\"flex items-center gap-4\">\n              <Avatar>\n                <AvatarImage src={user.profileImageUrl || undefined} />\n                <AvatarFallback>\n                  {user.firstName?.[0]}{user.lastName?.[0]}\n                </AvatarFallback>\n              </Avatar>\n              <div>\n                <div className=\"font-semibold\">{user.firstName} {user.lastName}</div>\n                <div className=\"text-sm text-muted-foreground\">{user.email}</div>\n              </div>\n              <a href=\"/api/logout\">\n                <Button variant=\"outline\" size=\"sm\" data-testid=\"button-logout\">\n                  Cerrar Sesión\n                </Button>\n              </a>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* Main Content */}\n      <main className=\"container mx-auto px-4 py-8\">\n        {/* Stats Overview */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">Categoría</CardTitle>\n              <Trophy className=\"h-4 w-4 text-muted-foreground\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold capitalize\" data-testid=\"text-category\">\n                {profile?.category || \"N/A\"}\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">Partidos Jugados</CardTitle>\n              <Calendar className=\"h-4 w-4 text-muted-foreground\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold\" data-testid=\"text-games-played\">\n                {profile?.gamesPlayed || 0}\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">Goles</CardTitle>\n              <TrendingUp className=\"h-4 w-4 text-muted-foreground\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold\" data-testid=\"text-goals\">\n                {profile?.goals || 0}\n              </div>\n              <p className=\"text-xs text-muted-foreground\">\n                {profile?.assists || 0} asistencias\n              </p>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">Saldo Pendiente</CardTitle>\n              <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\n            </CardHeader>\n            <CardContent>\n              <div className={`text-2xl font-bold ${pendingBalance > 0 ? \"text-destructive\" : \"text-green-600\"}`} data-testid=\"text-balance\">\n                ${pendingBalance.toLocaleString()}\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {/* Profile Info */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <User className=\"h-5 w-5\" />\n                Información Personal\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-3\">\n              <div className=\"grid grid-cols-2 gap-3 text-sm\">\n                <div>\n                  <span className=\"text-muted-foreground\">Número:</span>\n                  <span className=\"ml-2 font-semibold\">#{profile?.jerseyNumber || \"N/A\"}</span>\n                </div>\n                <div>\n                  <span className=\"text-muted-foreground\">Posición:</span>\n                  <span className=\"ml-2 font-semibold capitalize\">{profile?.position || \"N/A\"}</span>\n                </div>\n                <div>\n                  <span className=\"text-muted-foreground\">Teléfono:</span>\n                  <span className=\"ml-2 font-semibold\">{profile?.phone || \"N/A\"}</span>\n                </div>\n                <div>\n                  <span className=\"text-muted-foreground\">Tipo de Sangre:</span>\n                  <span className=\"ml-2 font-semibold\">{profile?.bloodType || \"N/A\"}</span>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Payment Status */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <DollarSign className=\"h-5 w-5\" />\n                Estado de Pagos\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              {accounts.length > 0 ? (\n                <div className=\"space-y-3\">\n                  {accounts.slice(0, 5).map((account) => (\n                    <div key={account.id} className=\"flex items-center justify-between p-3 bg-muted/50 rounded-md\" data-testid={`account-${account.id}`}>\n                      <div className=\"flex-1\">\n                        <div className=\"font-semibold text-sm\">{account.description}</div>\n                        <div className=\"text-xs text-muted-foreground\">\n                          Vencimiento: {new Date(account.dueDate).toLocaleDateString()}\n                        </div>\n                      </div>\n                      <div className=\"flex items-center gap-3\">\n                        <div className=\"font-mono font-bold\">${parseFloat(account.amount).toLocaleString()}</div>\n                        <Badge\n                          variant={\n                            account.status === \"paid\"\n                              ? \"default\"\n                              : account.status === \"overdue\"\n                              ? \"destructive\"\n                              : \"secondary\"\n                          }\n                        >\n                          {account.status === \"paid\" ? \"Pagado\" : account.status === \"overdue\" ? \"Vencido\" : \"Pendiente\"}\n                        </Badge>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              ) : (\n                <p className=\"text-muted-foreground text-sm\">No tienes cuentas pendientes.</p>\n              )}\n            </CardContent>\n          </Card>\n\n          {/* Documents */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <FileText className=\"h-5 w-5\" />\n                Documentos\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-sm text-muted-foreground mb-4\">\n                Mantén tus documentos actualizados para participar en torneos.\n              </p>\n              <Button variant=\"outline\" className=\"w-full\" data-testid=\"button-upload-documents\">\n                Subir Documentos\n              </Button>\n            </CardContent>\n          </Card>\n\n          {/* Quick Actions */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Acciones Rápidas</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-3\">\n              <Button variant=\"outline\" className=\"w-full justify-start\" data-testid=\"button-view-schedule\">\n                <Calendar className=\"mr-2 h-4 w-4\" />\n                Ver Horario de Entrenamientos\n              </Button>\n              <Button variant=\"outline\" className=\"w-full justify-start\" data-testid=\"button-view-tournaments\">\n                <Trophy className=\"mr-2 h-4 w-4\" />\n                Próximos Torneos\n              </Button>\n            </CardContent>\n          </Card>\n        </div>\n      </main>\n    </div>\n  );\n}\n","size_bytes":10163},"client/src/lib/authUtils.ts":{"content":"export function isUnauthorizedError(error: Error): boolean {\n  return /^401: .*Unauthorized/.test(error.message);\n}\n","size_bytes":116},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport NotFound from \"@/pages/not-found\";\n\n// Public Pages\nimport Landing from \"@/pages/Landing\";\nimport About from \"@/pages/About\";\nimport Services from \"@/pages/Services\";\nimport Categories from \"@/pages/Categories\";\nimport CategoryDetail from \"@/pages/CategoryDetail\";\nimport Tournaments from \"@/pages/Tournaments\";\nimport Contact from \"@/pages/Contact\";\n\n// Private Pages\nimport PlayerDashboard from \"@/pages/PlayerDashboard\";\nimport AdminDashboard from \"@/pages/AdminDashboard\";\n\nfunction Router() {\n  const { isAuthenticated, isLoading, isAdmin } = useAuth();\n\n  return (\n    <Switch>\n      {/* Public Routes - Always accessible */}\n      <Route path=\"/\" component={isLoading || !isAuthenticated ? Landing : (isAdmin ? AdminDashboard : PlayerDashboard)} />\n      <Route path=\"/nosotros\" component={About} />\n      <Route path=\"/servicios\" component={Services} />\n      <Route path=\"/categorias\" component={Categories} />\n      <Route path=\"/categorias/:id\" component={CategoryDetail} />\n      <Route path=\"/torneos\" component={Tournaments} />\n      <Route path=\"/contacto\" component={Contact} />\n\n      {/* Private Routes - Require Authentication */}\n      <Route path=\"/dashboard\" component={PlayerDashboard} />\n      <Route path=\"/admin\" component={AdminDashboard} />\n\n      {/* 404 */}\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1875},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"server/replitAuth.ts":{"content":"import * as client from \"openid-client\";\nimport { Strategy, type VerifyFunction } from \"openid-client/passport\";\n\nimport passport from \"passport\";\nimport session from \"express-session\";\nimport type { Express, RequestHandler } from \"express\";\nimport memoize from \"memoizee\";\nimport connectPg from \"connect-pg-simple\";\nimport { storage } from \"./storage\";\n\nif (!process.env.REPLIT_DOMAINS) {\n  throw new Error(\"Environment variable REPLIT_DOMAINS not provided\");\n}\n\nconst getOidcConfig = memoize(\n  async () => {\n    return await client.discovery(\n      new URL(process.env.ISSUER_URL ?? \"https://replit.com/oidc\"),\n      process.env.REPL_ID!\n    );\n  },\n  { maxAge: 3600 * 1000 }\n);\n\nexport function getSession() {\n  const sessionTtl = 7 * 24 * 60 * 60 * 1000; // 1 week\n  const pgStore = connectPg(session);\n  const sessionStore = new pgStore({\n    conString: process.env.DATABASE_URL,\n    createTableIfMissing: false,\n    ttl: sessionTtl,\n    tableName: \"sessions\",\n  });\n  return session({\n    secret: process.env.SESSION_SECRET!,\n    store: sessionStore,\n    resave: false,\n    saveUninitialized: false,\n    cookie: {\n      httpOnly: true,\n      secure: true,\n      maxAge: sessionTtl,\n    },\n  });\n}\n\nfunction updateUserSession(\n  user: any,\n  tokens: client.TokenEndpointResponse & client.TokenEndpointResponseHelpers\n) {\n  user.claims = tokens.claims();\n  user.access_token = tokens.access_token;\n  user.refresh_token = tokens.refresh_token;\n  user.expires_at = user.claims?.exp;\n}\n\nasync function upsertUser(\n  claims: any,\n) {\n  await storage.upsertUser({\n    id: claims[\"sub\"],\n    email: claims[\"email\"],\n    firstName: claims[\"first_name\"],\n    lastName: claims[\"last_name\"],\n    profileImageUrl: claims[\"profile_image_url\"],\n  });\n}\n\nexport async function setupAuth(app: Express) {\n  app.set(\"trust proxy\", 1);\n  app.use(getSession());\n  app.use(passport.initialize());\n  app.use(passport.session());\n\n  const config = await getOidcConfig();\n\n  const verify: VerifyFunction = async (\n    tokens: client.TokenEndpointResponse & client.TokenEndpointResponseHelpers,\n    verified: passport.AuthenticateCallback\n  ) => {\n    const user = {};\n    updateUserSession(user, tokens);\n    await upsertUser(tokens.claims());\n    verified(null, user);\n  };\n\n  for (const domain of process.env\n    .REPLIT_DOMAINS!.split(\",\")) {\n    const strategy = new Strategy(\n      {\n        name: `replitauth:${domain}`,\n        config,\n        scope: \"openid email profile offline_access\",\n        callbackURL: `https://${domain}/api/callback`,\n      },\n      verify,\n    );\n    passport.use(strategy);\n  }\n\n  passport.serializeUser((user: Express.User, cb) => cb(null, user));\n  passport.deserializeUser((user: Express.User, cb) => cb(null, user));\n\n  app.get(\"/api/login\", (req, res, next) => {\n    passport.authenticate(`replitauth:${req.hostname}`, {\n      prompt: \"login consent\",\n      scope: [\"openid\", \"email\", \"profile\", \"offline_access\"],\n    })(req, res, next);\n  });\n\n  app.get(\"/api/callback\", (req, res, next) => {\n    passport.authenticate(`replitauth:${req.hostname}`, {\n      successReturnToOrRedirect: \"/\",\n      failureRedirect: \"/api/login\",\n    })(req, res, next);\n  });\n\n  app.get(\"/api/logout\", (req, res) => {\n    req.logout(() => {\n      res.redirect(\n        client.buildEndSessionUrl(config, {\n          client_id: process.env.REPL_ID!,\n          post_logout_redirect_uri: `${req.protocol}://${req.hostname}`,\n        }).href\n      );\n    });\n  });\n}\n\nexport const isAuthenticated: RequestHandler = async (req, res, next) => {\n  const user = req.user as any;\n\n  if (!req.isAuthenticated() || !user.expires_at) {\n    return res.status(401).send(\"401: Unauthorized\");\n  }\n\n  const now = Math.floor(Date.now() / 1000);\n  if (now <= user.expires_at) {\n    return next();\n  }\n\n  const refreshToken = user.refresh_token;\n  if (!refreshToken) {\n    res.status(401).send(\"401: Unauthorized\");\n    return;\n  }\n\n  try {\n    const config = await getOidcConfig();\n    const tokenResponse = await client.refreshTokenGrant(config, refreshToken);\n    updateUserSession(user, tokenResponse);\n    return next();\n  } catch (error) {\n    res.status(401).send(\"401: Unauthorized\");\n    return;\n  }\n};\n","size_bytes":4197},"client/src/pages/Landing.tsx":{"content":"import { PublicNav } from \"@/components/layout/PublicNav\";\nimport { Footer } from \"@/components/layout/Footer\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Trophy, Users, Calendar, Target } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport type { NewsPost } from \"@shared/schema\";\nimport heroImage from \"@assets/generated_images/Hockey_hero_action_shot_61944fec.png\";\nimport celebrationImage from \"@assets/generated_images/Team_celebration_photo_ef5bea2c.png\";\n\nexport default function Landing() {\n  const { data: news = [], isLoading: newsLoading } = useQuery<NewsPost[]>({\n    queryKey: [\"/api/news/recent\"],\n  });\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <PublicNav />\n\n      {/* Hero Section */}\n      <section className=\"relative h-[90vh] flex items-center justify-center overflow-hidden\">\n        {/* Background Image with Gradient Overlay */}\n        <div className=\"absolute inset-0 z-0\">\n          <img\n            src={heroImage}\n            alt=\"Wild Dogs Hockey Action\"\n            className=\"w-full h-full object-cover\"\n          />\n          <div className=\"absolute inset-0 bg-gradient-to-t from-background via-background/60 to-transparent\" />\n        </div>\n\n        {/* Hero Content */}\n        <div className=\"relative z-10 container mx-auto px-4 text-center\">\n          <h1 className=\"text-6xl md:text-8xl font-black text-white mb-6 tracking-tight uppercase drop-shadow-lg\">\n            Wild Dogs\n          </h1>\n          <p className=\"text-xl md:text-2xl text-white/90 mb-8 max-w-2xl mx-auto drop-shadow-md\">\n            Club de Hockey en Línea profesional en Bogotá, Colombia\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <a href=\"/api/login\" data-testid=\"button-hero-join\">\n              <Button\n                size=\"lg\"\n                className=\"text-lg px-8 py-6 bg-primary/90 backdrop-blur-sm border border-primary-border hover-elevate active-elevate-2\"\n              >\n                Únete al Club\n              </Button>\n            </a>\n            <Link href=\"/categorias\" data-testid=\"link-hero-categories\">\n              <Button\n                size=\"lg\"\n                variant=\"outline\"\n                className=\"text-lg px-8 py-6 bg-background/20 backdrop-blur-sm text-white border-white/30 hover-elevate active-elevate-2\"\n              >\n                Ver Categorías\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </section>\n\n      {/* Stats Section */}\n      <section className=\"py-16 bg-card\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-8\">\n            <div className=\"text-center\">\n              <div className=\"text-4xl md:text-5xl font-black text-primary mb-2\" data-testid=\"stat-years\">\n                10+\n              </div>\n              <div className=\"text-sm text-muted-foreground uppercase tracking-wide\">\n                Años de Historia\n              </div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-4xl md:text-5xl font-black text-primary mb-2\" data-testid=\"stat-players\">\n                150+\n              </div>\n              <div className=\"text-sm text-muted-foreground uppercase tracking-wide\">\n                Jugadores Activos\n              </div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-4xl md:text-5xl font-black text-primary mb-2\" data-testid=\"stat-championships\">\n                25+\n              </div>\n              <div className=\"text-sm text-muted-foreground uppercase tracking-wide\">\n                Torneos Ganados\n              </div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-4xl md:text-5xl font-black text-primary mb-2\" data-testid=\"stat-categories\">\n                6\n              </div>\n              <div className=\"text-sm text-muted-foreground uppercase tracking-wide\">\n                Categorías\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Mission & Vision */}\n      <section className=\"py-20\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"max-w-4xl mx-auto text-center\">\n            <h2 className=\"text-4xl md:text-5xl font-bold mb-6\">Nuestra Misión</h2>\n            <p className=\"text-lg text-muted-foreground leading-relaxed mb-12\">\n              Formar deportistas integrales a través del hockey en línea, promoviendo valores de trabajo en equipo, disciplina y excelencia deportiva. Brindar a nuestros jugadores las herramientas técnicas y tácticas necesarias para competir al más alto nivel mientras desarrollan habilidades para la vida.\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* News Section */}\n      <section className=\"py-20 bg-muted/30\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"flex items-center justify-between mb-12\">\n            <h2 className=\"text-3xl md:text-4xl font-bold\">Noticias Recientes</h2>\n            <Link href=\"/torneos\">\n              <Button variant=\"outline\" data-testid=\"button-view-all-news\">\n                Ver Todas\n              </Button>\n            </Link>\n          </div>\n\n          {newsLoading ? (\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n              {[1, 2, 3].map((i) => (\n                <Card key={i} className=\"overflow-hidden\">\n                  <div className=\"h-48 bg-muted animate-pulse\" />\n                  <CardContent className=\"p-6\">\n                    <div className=\"h-6 bg-muted rounded animate-pulse mb-3\" />\n                    <div className=\"h-4 bg-muted rounded animate-pulse w-2/3\" />\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          ) : news.length > 0 ? (\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n              {news.slice(0, 3).map((post) => (\n                <Card key={post.id} className=\"overflow-hidden hover-elevate active-elevate-2\" data-testid={`news-card-${post.id}`}>\n                  {post.imageUrl && (\n                    <div className=\"h-48 overflow-hidden\">\n                      <img\n                        src={post.imageUrl}\n                        alt={post.title}\n                        className=\"w-full h-full object-cover\"\n                      />\n                    </div>\n                  )}\n                  <CardContent className=\"p-6\">\n                    <h3 className=\"text-xl font-bold mb-2\">{post.title}</h3>\n                    <p className=\"text-sm text-muted-foreground line-clamp-3\">\n                      {post.excerpt || post.content}\n                    </p>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          ) : (\n            <Card className=\"p-12\">\n              <div className=\"text-center text-muted-foreground\">\n                <p>No hay noticias disponibles en este momento.</p>\n              </div>\n            </Card>\n          )}\n        </div>\n      </section>\n\n      {/* Quick Access Grid */}\n      <section className=\"py-20\">\n        <div className=\"container mx-auto px-4\">\n          <h2 className=\"text-3xl md:text-4xl font-bold mb-12 text-center\">Descubre Wild Dogs</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 max-w-4xl mx-auto\">\n            <Link href=\"/categorias\">\n              <Card className=\"p-8 hover-elevate active-elevate-2 h-full\" data-testid=\"card-categories\">\n                <Trophy className=\"h-12 w-12 text-primary mb-4\" />\n                <h3 className=\"text-2xl font-bold mb-3\">Categorías</h3>\n                <p className=\"text-muted-foreground\">\n                  Conoce nuestras 6 categorías desde Sub 8 hasta Mayores con sus rosters y entrenadores.\n                </p>\n              </Card>\n            </Link>\n\n            <Link href=\"/servicios\">\n              <Card className=\"p-8 hover-elevate active-elevate-2 h-full\" data-testid=\"card-services\">\n                <Users className=\"h-12 w-12 text-primary mb-4\" />\n                <h3 className=\"text-2xl font-bold mb-3\">Servicios</h3>\n                <p className=\"text-muted-foreground\">\n                  Descubre nuestros programas de entrenamiento, horarios y planes de membresía.\n                </p>\n              </Card>\n            </Link>\n\n            <Link href=\"/torneos\">\n              <Card className=\"p-8 hover-elevate active-elevate-2 h-full\" data-testid=\"card-tournaments\">\n                <Calendar className=\"h-12 w-12 text-primary mb-4\" />\n                <h3 className=\"text-2xl font-bold mb-3\">Torneos</h3>\n                <p className=\"text-muted-foreground\">\n                  Revisa el calendario de partidos, resultados y tablas de posiciones.\n                </p>\n              </Card>\n            </Link>\n\n            <Link href=\"/contacto\">\n              <Card className=\"p-8 hover-elevate active-elevate-2 h-full\" data-testid=\"card-contact\">\n                <Target className=\"h-12 w-12 text-primary mb-4\" />\n                <h3 className=\"text-2xl font-bold mb-3\">Contacto</h3>\n                <p className=\"text-muted-foreground\">\n                  ¿Tienes preguntas? Contáctanos y te responderemos lo antes posible.\n                </p>\n              </Card>\n            </Link>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-primary text-primary-foreground\">\n        <div className=\"container mx-auto px-4 text-center\">\n          <h2 className=\"text-4xl md:text-5xl font-bold mb-6\">\n            ¿Listo para Unirte a la Manada?\n          </h2>\n          <p className=\"text-xl mb-8 max-w-2xl mx-auto opacity-90\">\n            Forma parte del mejor club de hockey en línea de Bogotá. Desarrolla tus habilidades, compite al más alto nivel y haz amigos para toda la vida.\n          </p>\n          <a href=\"/api/login\" data-testid=\"button-cta-join\">\n            <Button\n              size=\"lg\"\n              variant=\"outline\"\n              className=\"text-lg px-8 py-6 bg-primary-foreground text-primary border-primary-border hover-elevate active-elevate-2\"\n            >\n              Inscríbete Ahora\n            </Button>\n          </a>\n        </div>\n      </section>\n\n      {/* Gallery Preview */}\n      <section className=\"py-20\">\n        <div className=\"container mx-auto px-4\">\n          <h2 className=\"text-3xl md:text-4xl font-bold mb-12 text-center\">Momentos Wild Dogs</h2>\n          <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\n            <div className=\"aspect-square overflow-hidden rounded-md\">\n              <img\n                src={celebrationImage}\n                alt=\"Team Celebration\"\n                className=\"w-full h-full object-cover hover:scale-105 transition-transform duration-300\"\n              />\n            </div>\n            <div className=\"aspect-square overflow-hidden rounded-md\">\n              <img\n                src={heroImage}\n                alt=\"Hockey Action\"\n                className=\"w-full h-full object-cover hover:scale-105 transition-transform duration-300\"\n              />\n            </div>\n            <div className=\"aspect-square overflow-hidden rounded-md hidden md:block\">\n              <img\n                src={celebrationImage}\n                alt=\"Team Spirit\"\n                className=\"w-full h-full object-cover hover:scale-105 transition-transform duration-300\"\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":11796},"client/src/components/layout/PublicNav.tsx":{"content":"import { Link, useLocation } from \"wouter\";\nimport { Menu, X } from \"lucide-react\";\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\n\nexport function PublicNav() {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [location] = useLocation();\n\n  const navLinks = [\n    { href: \"/\", label: \"Inicio\" },\n    { href: \"/nosotros\", label: \"Nosotros\" },\n    { href: \"/servicios\", label: \"Servicios\" },\n    { href: \"/categorias\", label: \"Categorías\" },\n    { href: \"/torneos\", label: \"Torneos\" },\n    { href: \"/contacto\", label: \"Contacto\" },\n  ];\n\n  return (\n    <nav className=\"sticky top-0 z-50 bg-background/95 backdrop-blur-sm border-b\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"flex items-center justify-between h-16\">\n          {/* Logo */}\n          <Link href=\"/\" data-testid=\"link-home\">\n            <div className=\"flex items-center gap-2 hover-elevate active-elevate-2 rounded-md px-3 py-2 -ml-3\">\n              <div className=\"text-2xl font-bold text-primary\">Wild Dogs</div>\n            </div>\n          </Link>\n\n          {/* Desktop Navigation */}\n          <div className=\"hidden md:flex items-center gap-1\">\n            {navLinks.map((link) => (\n              <Link key={link.href} href={link.href} data-testid={`link-${link.label.toLowerCase()}`}>\n                <div\n                  className={`px-4 py-2 rounded-md text-sm font-medium transition-colors hover-elevate active-elevate-2 ${\n                    location === link.href\n                      ? \"text-primary bg-primary/10\"\n                      : \"text-foreground\"\n                  }`}\n                >\n                  {link.label}\n                </div>\n              </Link>\n            ))}\n          </div>\n\n          {/* CTA Buttons */}\n          <div className=\"hidden md:flex items-center gap-2\">\n            <a href=\"/api/login\" data-testid=\"button-login\">\n              <Button variant=\"outline\" size=\"sm\">\n                Iniciar Sesión\n              </Button>\n            </a>\n            <a href=\"/api/login\" data-testid=\"button-join\">\n              <Button size=\"sm\">\n                Únete al Club\n              </Button>\n            </a>\n          </div>\n\n          {/* Mobile Menu Button */}\n          <button\n            className=\"md:hidden p-2 rounded-md hover-elevate active-elevate-2\"\n            onClick={() => setIsMenuOpen(!isMenuOpen)}\n            data-testid=\"button-menu-toggle\"\n            aria-label=\"Toggle menu\"\n          >\n            {isMenuOpen ? <X className=\"h-6 w-6\" /> : <Menu className=\"h-6 w-6\" />}\n          </button>\n        </div>\n\n        {/* Mobile Menu */}\n        {isMenuOpen && (\n          <div className=\"md:hidden py-4 space-y-2 border-t\" data-testid=\"mobile-menu\">\n            {navLinks.map((link) => (\n              <Link key={link.href} href={link.href}>\n                <div\n                  className={`block px-4 py-2 rounded-md text-sm font-medium hover-elevate active-elevate-2 ${\n                    location === link.href\n                      ? \"text-primary bg-primary/10\"\n                      : \"text-foreground\"\n                  }`}\n                  onClick={() => setIsMenuOpen(false)}\n                >\n                  {link.label}\n                </div>\n              </Link>\n            ))}\n            <div className=\"pt-4 space-y-2 border-t\">\n              <a href=\"/api/login\" className=\"block\" data-testid=\"button-mobile-login\">\n                <Button variant=\"outline\" className=\"w-full\">\n                  Iniciar Sesión\n                </Button>\n              </a>\n              <a href=\"/api/login\" className=\"block\" data-testid=\"button-mobile-join\">\n                <Button className=\"w-full\">\n                  Únete al Club\n                </Button>\n              </a>\n            </div>\n          </div>\n        )}\n      </div>\n    </nav>\n  );\n}\n","size_bytes":3892},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/* LIGHT MODE */\n:root {\n  --button-outline: rgba(0,0,0, .10);\n  --badge-outline: rgba(0,0,0, .05);\n\n  /* Automatic computation of border around primary / danger buttons */\n  --opaque-button-border-intensity: -8; /* In terms of percentages */\n\n  /* Backgrounds applied on top of other backgrounds when hovered/active */\n  --elevate-1: rgba(0,0,0, .03);\n  --elevate-2: rgba(0,0,0, .08);\n\n  --background: 0 0% 98%;\n\n  --foreground: 220 15% 15%;\n\n  --border: 220 8% 88%;\n\n  --card: 0 0% 100%;\n\n  --card-foreground: 220 15% 15%;\n\n  --card-border: 220 6% 92%;\n\n  --sidebar: 220 5% 96%;\n\n  --sidebar-foreground: 220 15% 15%;\n\n  --sidebar-border: 220 6% 90%;\n\n  --sidebar-primary: 220 85% 48%;\n\n  --sidebar-primary-foreground: 0 0% 98%;\n\n  --sidebar-accent: 220 8% 88%;\n\n  --sidebar-accent-foreground: 220 15% 15%;\n\n  --sidebar-ring: 220 85% 48%;\n\n  --popover: 220 5% 94%;\n\n  --popover-foreground: 220 15% 15%;\n\n  --popover-border: 220 6% 88%;\n\n  --primary: 220 85% 48%;\n\n  --primary-foreground: 0 0% 98%;\n\n  --secondary: 220 6% 86%;\n\n  --secondary-foreground: 220 15% 15%;\n\n  --muted: 220 8% 91%;\n\n  --muted-foreground: 220 12% 35%;\n\n  --accent: 220 12% 89%;\n\n  --accent-foreground: 220 15% 15%;\n\n  --destructive: 0 72% 51%;\n\n  --destructive-foreground: 0 0% 98%;\n\n  --input: 220 12% 75%;\n  --ring: 220 85% 48%;\n  --chart-1: 220 85% 45%;\n  --chart-2: 15 85% 52%;\n  --chart-3: 142 70% 45%;\n  --chart-4: 199 89% 48%;\n  --chart-5: 38 92% 50%;\n\n  --font-sans: 'Inter', sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: 'JetBrains Mono', monospace;\n  --radius: .5rem; /* 8px */\n  --shadow-2xs: 0px 1px 2px 0px hsl(220 15% 15% / 0.05);\n  --shadow-xs: 0px 1px 3px 0px hsl(220 15% 15% / 0.08);\n  --shadow-sm: 0px 2px 4px 0px hsl(220 15% 15% / 0.06), 0px 1px 2px -1px hsl(220 15% 15% / 0.08);\n  --shadow: 0px 4px 6px 0px hsl(220 15% 15% / 0.07), 0px 2px 4px -1px hsl(220 15% 15% / 0.06);\n  --shadow-md: 0px 6px 12px 0px hsl(220 15% 15% / 0.08), 0px 4px 8px -2px hsl(220 15% 15% / 0.06);\n  --shadow-lg: 0px 12px 24px 0px hsl(220 15% 15% / 0.10), 0px 8px 16px -4px hsl(220 15% 15% / 0.08);\n  --shadow-xl: 0px 20px 40px 0px hsl(220 15% 15% / 0.12), 0px 12px 24px -6px hsl(220 15% 15% / 0.10);\n  --shadow-2xl: 0px 32px 64px 0px hsl(220 15% 15% / 0.14);\n  --tracking-normal: 0em;\n  --spacing: 0.25rem;\n\n  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */\n\n  /* Fallback for older browsers */\n  --sidebar-primary-border: hsl(var(--sidebar-primary));\n  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --sidebar-accent-border: hsl(var(--sidebar-accent));\n  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --primary-border: hsl(var(--primary));\n  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --secondary-border: hsl(var(--secondary));\n  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --muted-border: hsl(var(--muted));\n  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --accent-border: hsl(var(--accent));\n  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --destructive-border: hsl(var(--destructive));\n  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n}\n\n.dark {\n  --button-outline: rgba(255,255,255, .10);\n  --badge-outline: rgba(255,255,255, .05);\n\n  --opaque-button-border-intensity: 9;  /* In terms of percentages */\n\n  /* Backgrounds applied on top of other backgrounds when hovered/active */\n  --elevate-1: rgba(255,255,255, .04);\n  --elevate-2: rgba(255,255,255, .09);\n\n  --background: 220 15% 12%;\n\n  --foreground: 0 0% 95%;\n\n  --border: 220 12% 22%;\n\n  --card: 220 12% 16%;\n\n  --card-foreground: 0 0% 95%;\n\n  --card-border: 220 12% 20%;\n\n  --sidebar: 220 12% 14%;\n\n  --sidebar-foreground: 0 0% 95%;\n\n  --sidebar-border: 220 12% 18%;\n\n  --sidebar-primary: 220 85% 45%;\n\n  --sidebar-primary-foreground: 0 0% 95%;\n\n  --sidebar-accent: 220 12% 20%;\n\n  --sidebar-accent-foreground: 0 0% 95%;\n\n  --sidebar-ring: 220 85% 45%;\n\n  --popover: 220 12% 18%;\n\n  --popover-foreground: 0 0% 95%;\n\n  --popover-border: 220 12% 24%;\n\n  --primary: 220 85% 45%;\n\n  --primary-foreground: 0 0% 98%;\n\n  --secondary: 220 10% 24%;\n\n  --secondary-foreground: 0 0% 95%;\n\n  --muted: 220 10% 22%;\n\n  --muted-foreground: 0 0% 70%;\n\n  --accent: 220 12% 20%;\n\n  --accent-foreground: 0 0% 95%;\n\n  --destructive: 0 72% 51%;\n\n  --destructive-foreground: 0 0% 98%;\n\n  --input: 220 12% 30%;\n  --ring: 220 85% 45%;\n  --chart-1: 220 85% 65%;\n  --chart-2: 15 85% 62%;\n  --chart-3: 142 70% 55%;\n  --chart-4: 199 89% 58%;\n  --chart-5: 38 92% 60%;\n\n  --shadow-2xs: 0px 1px 2px 0px hsl(0 0% 0% / 0.20);\n  --shadow-xs: 0px 1px 3px 0px hsl(0 0% 0% / 0.25);\n  --shadow-sm: 0px 2px 4px 0px hsl(0 0% 0% / 0.20), 0px 1px 2px -1px hsl(0 0% 0% / 0.25);\n  --shadow: 0px 4px 6px 0px hsl(0 0% 0% / 0.25), 0px 2px 4px -1px hsl(0 0% 0% / 0.20);\n  --shadow-md: 0px 6px 12px 0px hsl(0 0% 0% / 0.30), 0px 4px 8px -2px hsl(0 0% 0% / 0.25);\n  --shadow-lg: 0px 12px 24px 0px hsl(0 0% 0% / 0.35), 0px 8px 16px -4px hsl(0 0% 0% / 0.30);\n  --shadow-xl: 0px 20px 40px 0px hsl(0 0% 0% / 0.40), 0px 12px 24px -6px hsl(0 0% 0% / 0.35);\n  --shadow-2xl: 0px 32px 64px 0px hsl(0 0% 0% / 0.45);\n\n  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */\n  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n}\n\n/**\n * Using the elevate system.\n * Automatic contrast adjustment.\n *\n * <element className=\"hover-elevate\" />\n * <element className=\"active-elevate-2\" />\n *\n * // Using the tailwind utility when a data attribute is \"on\"\n * <element className=\"toggle-elevate data-[state=on]:toggle-elevated\" />\n * // Or manually controlling the toggle state\n * <element className=\"toggle-elevate toggle-elevated\" />\n *\n * Elevation systems have to handle many states.\n * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)\n * - toggled or not\n * - focused or not (this is not handled with these utilities)\n *\n * Even without handling focused or not, this is six possible combinations that\n * need to be distinguished from eachother visually.\n */\n@layer utilities {\n\n  /* Hide ugly search cancel button in Chrome until we can style it properly */\n  input[type=\"search\"]::-webkit-search-cancel-button {\n    @apply hidden;\n  }\n\n  /* Placeholder styling for contentEditable div */\n  [contenteditable][data-placeholder]:empty::before {\n    content: attr(data-placeholder);\n    color: hsl(var(--muted-foreground));\n    pointer-events: none;\n  }\n\n  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of\n   * buttons/badges can remove the automatic brightness adjustment on interactions\n   * and program their own. */\n  .no-default-hover-elevate {}\n\n  .no-default-active-elevate {}\n\n\n  /**\n   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.\n   * This way they can stack/compound. Both will overlap the parent's borders!\n   * So borders will be automatically adjusted both on toggle, and hover/active,\n   * and they will be compounded.\n   */\n  .toggle-elevate::before,\n  .toggle-elevate-2::before {\n    content: \"\";\n    pointer-events: none;\n    position: absolute;\n    inset: 0px;\n    /*border-radius: inherit;   match rounded corners */\n    border-radius: inherit;\n    z-index: -1;\n    /* sits behind content but above backdrop */\n  }\n\n  .toggle-elevate.toggle-elevated::before {\n    background-color: var(--elevate-2);\n  }\n\n  /* If there's a 1px border, adjust the inset so that it covers that parent's border */\n  .border.toggle-elevate::before {\n    inset: -1px;\n  }\n\n  /* Does not work on elements with overflow:hidden! */\n  .hover-elevate:not(.no-default-hover-elevate),\n  .active-elevate:not(.no-default-active-elevate),\n  .hover-elevate-2:not(.no-default-hover-elevate),\n  .active-elevate-2:not(.no-default-active-elevate) {\n    position: relative;\n    z-index: 0;\n  }\n\n  .hover-elevate:not(.no-default-hover-elevate)::after,\n  .active-elevate:not(.no-default-active-elevate)::after,\n  .hover-elevate-2:not(.no-default-hover-elevate)::after,\n  .active-elevate-2:not(.no-default-active-elevate)::after {\n    content: \"\";\n    pointer-events: none;\n    position: absolute;\n    inset: 0px;\n    /*border-radius: inherit;   match rounded corners */\n    border-radius: inherit;\n    z-index: 999;\n    /* sits in front of content */\n  }\n\n  .hover-elevate:hover:not(.no-default-hover-elevate)::after,\n  .active-elevate:active:not(.no-default-active-elevate)::after {\n    background-color: var(--elevate-1);\n  }\n\n  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,\n  .active-elevate-2:active:not(.no-default-active-elevate)::after {\n    background-color: var(--elevate-2);\n  }\n\n  /* If there's a 1px border, adjust the inset so that it covers that parent's border */\n  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,\n  .border.active-elevate:not(.no-active-interaction-elevate)::after,\n  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,\n  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,\n  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {\n    inset: -1px;\n  }\n}","size_bytes":10736},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\" +\n  \" hover-elevate active-elevate-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground border border-primary-border\",\n        destructive:\n          \"bg-destructive text-destructive-foreground border border-destructive-border\",\n        outline:\n          // Shows the background color of whatever card / sidebar / accent background it is inside of.\n          // Inherits the current text color.\n          \" border [border-color:var(--button-outline)]  shadow-xs active:shadow-none \",\n        secondary: \"border bg-secondary text-secondary-foreground border border-secondary-border \",\n        // Add a transparent border so that when someone toggles a border on later, it doesn't shift layout/size.\n        ghost: \"border border-transparent\",\n      },\n      // Heights are set as \"min\" heights, because sometimes Ai will place large amount of content\n      // inside buttons. With a min-height they will look appropriate with small amounts of content,\n      // but will expand to fit large amounts of content.\n      size: {\n        default: \"min-h-9 px-4 py-2\",\n        sm: \"min-h-8 rounded-md px-3 text-xs\",\n        lg: \"min-h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  },\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":2359},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n          await import(\"@replit/vite-plugin-dev-banner\").then((m) =>\n            m.devBanner(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":1080},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"shadcn-card rounded-xl border bg-card border-card-border text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n}\n","size_bytes":1904},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5741},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/pages/Tournaments.tsx":{"content":"import { PublicNav } from \"@/components/layout/PublicNav\";\nimport { Footer } from \"@/components/layout/Footer\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Calendar, MapPin, Trophy } from \"lucide-react\";\nimport type { Match, Standing } from \"@shared/schema\";\nimport { format } from \"date-fns\";\nimport { es } from \"date-fns/locale\";\n\nexport default function Tournaments() {\n  const { data: upcomingMatches = [], isLoading: upcomingLoading } = useQuery<Match[]>({\n    queryKey: [\"/api/matches/upcoming\"],\n  });\n\n  const { data: pastMatches = [], isLoading: pastLoading } = useQuery<Match[]>({\n    queryKey: [\"/api/matches/past\"],\n  });\n\n  const { data: standings = [], isLoading: standingsLoading } = useQuery<Standing[]>({\n    queryKey: [\"/api/standings\"],\n  });\n\n  const getResultBadgeVariant = (result: string | null) => {\n    if (result === \"win\") return \"default\";\n    if (result === \"loss\") return \"destructive\";\n    return \"secondary\";\n  };\n\n  const getResultText = (result: string | null) => {\n    if (result === \"win\") return \"Victoria\";\n    if (result === \"loss\") return \"Derrota\";\n    return \"Empate\";\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <PublicNav />\n\n      {/* Hero */}\n      <section className=\"py-20 md:py-32 bg-gradient-to-br from-primary to-primary/80 text-primary-foreground\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"max-w-4xl mx-auto text-center\">\n            <h1 className=\"text-5xl md:text-7xl font-black mb-6 tracking-tight uppercase\">\n              Torneos\n            </h1>\n            <p className=\"text-xl md:text-2xl opacity-90\">\n              Resultados, calendario y tablas de posiciones\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Tabs for different sections */}\n      <section className=\"py-20\">\n        <div className=\"container mx-auto px-4\">\n          <Tabs defaultValue=\"upcoming\" className=\"max-w-6xl mx-auto\">\n            <TabsList className=\"grid w-full grid-cols-3 mb-12\">\n              <TabsTrigger value=\"upcoming\" data-testid=\"tab-upcoming\">Próximos Partidos</TabsTrigger>\n              <TabsTrigger value=\"results\" data-testid=\"tab-results\">Resultados</TabsTrigger>\n              <TabsTrigger value=\"standings\" data-testid=\"tab-standings\">Tabla de Posiciones</TabsTrigger>\n            </TabsList>\n\n            {/* Upcoming Matches */}\n            <TabsContent value=\"upcoming\">\n              <div className=\"space-y-4\">\n                {upcomingLoading ? (\n                  <>\n                    {[1, 2, 3].map((i) => (\n                      <Card key={i}>\n                        <CardContent className=\"p-6\">\n                          <div className=\"h-20 bg-muted animate-pulse rounded\" />\n                        </CardContent>\n                      </Card>\n                    ))}\n                  </>\n                ) : upcomingMatches.length > 0 ? (\n                  upcomingMatches.map((match) => (\n                    <Card key={match.id} className=\"hover-elevate active-elevate-2\" data-testid={`upcoming-match-${match.id}`}>\n                      <CardContent className=\"p-6\">\n                        <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-4\">\n                          <div className=\"flex-1\">\n                            <div className=\"flex items-center gap-2 mb-2\">\n                              <Calendar className=\"h-4 w-4 text-muted-foreground\" />\n                              <span className=\"text-sm text-muted-foreground\">\n                                {format(new Date(match.date), \"EEEE, d 'de' MMMM 'de' yyyy 'a las' HH:mm\", { locale: es })}\n                              </span>\n                            </div>\n                            <div className=\"text-2xl font-bold mb-2\">\n                              Wild Dogs vs {match.opponent}\n                            </div>\n                            {match.location && (\n                              <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n                                <MapPin className=\"h-4 w-4\" />\n                                {match.location}\n                              </div>\n                            )}\n                          </div>\n                          <div className=\"flex items-center gap-3\">\n                            <Badge variant=\"secondary\" className=\"capitalize\">{match.categoryId || \"General\"}</Badge>\n                          </div>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  ))\n                ) : (\n                  <Card className=\"p-12\">\n                    <div className=\"text-center text-muted-foreground\">\n                      <Calendar className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\n                      <p>No hay partidos programados próximamente.</p>\n                    </div>\n                  </Card>\n                )}\n              </div>\n            </TabsContent>\n\n            {/* Past Results */}\n            <TabsContent value=\"results\">\n              <div className=\"space-y-4\">\n                {pastLoading ? (\n                  <>\n                    {[1, 2, 3].map((i) => (\n                      <Card key={i}>\n                        <CardContent className=\"p-6\">\n                          <div className=\"h-20 bg-muted animate-pulse rounded\" />\n                        </CardContent>\n                      </Card>\n                    ))}\n                  </>\n                ) : pastMatches.length > 0 ? (\n                  pastMatches.map((match) => (\n                    <Card key={match.id} className=\"hover-elevate active-elevate-2\" data-testid={`past-match-${match.id}`}>\n                      <CardContent className=\"p-6\">\n                        <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-4\">\n                          <div className=\"flex-1\">\n                            <div className=\"flex items-center gap-2 mb-2\">\n                              <Calendar className=\"h-4 w-4 text-muted-foreground\" />\n                              <span className=\"text-sm text-muted-foreground\">\n                                {format(new Date(match.date), \"d 'de' MMMM 'de' yyyy\", { locale: es })}\n                              </span>\n                              <Badge variant={getResultBadgeVariant(match.result)} className=\"ml-2\">\n                                {getResultText(match.result)}\n                              </Badge>\n                            </div>\n                            <div className=\"text-2xl font-bold mb-2\">\n                              Wild Dogs vs {match.opponent}\n                            </div>\n                            {match.homeScore !== null && match.awayScore !== null && (\n                              <div className=\"text-3xl font-black font-mono text-primary\">\n                                {match.homeScore} - {match.awayScore}\n                              </div>\n                            )}\n                            {match.location && (\n                              <div className=\"flex items-center gap-2 text-sm text-muted-foreground mt-2\">\n                                <MapPin className=\"h-4 w-4\" />\n                                {match.location}\n                              </div>\n                            )}\n                          </div>\n                          <div className=\"flex items-center gap-3\">\n                            <Badge variant=\"secondary\" className=\"capitalize\">{match.categoryId || \"General\"}</Badge>\n                          </div>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  ))\n                ) : (\n                  <Card className=\"p-12\">\n                    <div className=\"text-center text-muted-foreground\">\n                      <Trophy className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\n                      <p>No hay resultados disponibles aún.</p>\n                    </div>\n                  </Card>\n                )}\n              </div>\n            </TabsContent>\n\n            {/* Standings Table */}\n            <TabsContent value=\"standings\">\n              {standingsLoading ? (\n                <Card>\n                  <CardContent className=\"p-6\">\n                    <div className=\"h-96 bg-muted animate-pulse rounded\" />\n                  </CardContent>\n                </Card>\n              ) : standings.length > 0 ? (\n                <Card>\n                  <CardHeader>\n                    <CardTitle>Tabla de Posiciones</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"overflow-x-auto\">\n                      <table className=\"w-full\" data-testid=\"standings-table\">\n                        <thead>\n                          <tr className=\"border-b text-left\">\n                            <th className=\"pb-3 pl-4 pr-2 font-semibold text-sm\">#</th>\n                            <th className=\"pb-3 px-2 font-semibold text-sm\">Equipo</th>\n                            <th className=\"pb-3 px-2 font-semibold text-sm text-center\">PJ</th>\n                            <th className=\"pb-3 px-2 font-semibold text-sm text-center\">G</th>\n                            <th className=\"pb-3 px-2 font-semibold text-sm text-center\">E</th>\n                            <th className=\"pb-3 px-2 font-semibold text-sm text-center\">P</th>\n                            <th className=\"pb-3 px-2 font-semibold text-sm text-center\">GF</th>\n                            <th className=\"pb-3 px-2 font-semibold text-sm text-center\">GC</th>\n                            <th className=\"pb-3 px-2 font-semibold text-sm text-center\">DG</th>\n                            <th className=\"pb-3 pl-2 pr-4 font-semibold text-sm text-center\">Pts</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {standings.map((team) => (\n                            <tr\n                              key={team.id}\n                              className={`border-b hover-elevate active-elevate-2 ${\n                                team.teamName === \"Wild Dogs\" ? \"bg-primary/5\" : \"\"\n                              }`}\n                              data-testid={`standing-row-${team.id}`}\n                            >\n                              <td className=\"py-3 pl-4 pr-2 font-bold\">{team.position}</td>\n                              <td className=\"py-3 px-2 font-semibold\">{team.teamName}</td>\n                              <td className=\"py-3 px-2 text-center font-mono\">{team.played}</td>\n                              <td className=\"py-3 px-2 text-center font-mono\">{team.won}</td>\n                              <td className=\"py-3 px-2 text-center font-mono\">{team.drawn}</td>\n                              <td className=\"py-3 px-2 text-center font-mono\">{team.lost}</td>\n                              <td className=\"py-3 px-2 text-center font-mono\">{team.goalsFor}</td>\n                              <td className=\"py-3 px-2 text-center font-mono\">{team.goalsAgainst}</td>\n                              <td className=\"py-3 px-2 text-center font-mono\">{team.goalDifference}</td>\n                              <td className=\"py-3 pl-2 pr-4 text-center font-bold font-mono text-primary\">\n                                {team.points}\n                              </td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  </CardContent>\n                </Card>\n              ) : (\n                <Card className=\"p-12\">\n                  <div className=\"text-center text-muted-foreground\">\n                    <Trophy className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\n                    <p>No hay tabla de posiciones disponible aún.</p>\n                  </div>\n                </Card>\n              )}\n            </TabsContent>\n          </Tabs>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":12348},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  // Whitespace-nowrap: Badges should never wrap.\n  \"whitespace-nowrap inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\" +\n  \" hover-elevate \" ,\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow-xs\",\n        secondary: \"border-transparent bg-secondary text-secondary-foreground\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow-xs\",\n\n        outline: \" border [border-color:var(--badge-outline)] shadow-xs\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1202},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"client/src/pages/Categories.tsx":{"content":"import { PublicNav } from \"@/components/layout/PublicNav\";\nimport { Footer } from \"@/components/layout/Footer\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\nimport { ChevronRight } from \"lucide-react\";\nimport sub8Image from \"@assets/generated_images/Sub_8_category_action_a72d36d1.png\";\nimport sub12Image from \"@assets/generated_images/Sub_12_category_action_b13c69c9.png\";\nimport sub14Image from \"@assets/generated_images/Sub_14_category_action_8361893f.png\";\nimport sub16Image from \"@assets/generated_images/Sub_16_category_action_736df6df.png\";\nimport sub18Image from \"@assets/generated_images/Sub_18_category_action_dd3bdc31.png\";\nimport mayoresImage from \"@assets/generated_images/Mayores_category_action_e9aef5c0.png\";\n\nexport default function Categories() {\n  const categories = [\n    {\n      id: \"sub8\",\n      name: \"Sub 8\",\n      ageRange: \"Menores de 8 años\",\n      description: \"Introducción al hockey en línea con énfasis en diversión y desarrollo de habilidades básicas motoras.\",\n      imageUrl: sub8Image,\n      objectives: \"Aprender fundamentos del patinaje y manejo básico del stick.\",\n    },\n    {\n      id: \"sub12\",\n      name: \"Sub 12\",\n      ageRange: \"Menores de 12 años\",\n      description: \"Desarrollo técnico progresivo con introducción a conceptos tácticos básicos del juego.\",\n      imageUrl: sub12Image,\n      objectives: \"Perfeccionar técnica individual y comprender posiciones de juego.\",\n    },\n    {\n      id: \"sub14\",\n      name: \"Sub 14\",\n      ageRange: \"Menores de 14 años\",\n      description: \"Formación competitiva con énfasis en táctica colectiva y desarrollo físico.\",\n      imageUrl: sub14Image,\n      objectives: \"Dominar sistemas tácticos y mejorar condición física específica.\",\n    },\n    {\n      id: \"sub16\",\n      name: \"Sub 16\",\n      ageRange: \"Menores de 16 años\",\n      description: \"Alto nivel competitivo con preparación para categorías mayores y representación nacional.\",\n      imageUrl: sub16Image,\n      objectives: \"Excelencia técnico-táctica y preparación mental competitiva.\",\n    },\n    {\n      id: \"sub18\",\n      name: \"Sub 18\",\n      ageRange: \"Menores de 18 años\",\n      description: \"Categoría pre-profesional con enfoque en alto rendimiento y proyección deportiva.\",\n      imageUrl: sub18Image,\n      objectives: \"Perfeccionamiento integral y transición a nivel senior.\",\n    },\n    {\n      id: \"mayores\",\n      name: \"Mayores\",\n      ageRange: \"18 años en adelante\",\n      description: \"Competencia adulta de alto nivel en torneos locales y nacionales.\",\n      imageUrl: mayoresImage,\n      objectives: \"Competencia profesional y representación del club a máximo nivel.\",\n    },\n  ];\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <PublicNav />\n\n      {/* Hero */}\n      <section className=\"py-20 md:py-32 bg-gradient-to-br from-primary to-primary/80 text-primary-foreground\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"max-w-4xl mx-auto text-center\">\n            <h1 className=\"text-5xl md:text-7xl font-black mb-6 tracking-tight uppercase\">\n              Categorías\n            </h1>\n            <p className=\"text-xl md:text-2xl opacity-90\">\n              Seis categorías competitivas desde Sub 8 hasta Mayores\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Categories Grid */}\n      <section className=\"py-20\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {categories.map((category) => (\n              <Card\n                key={category.id}\n                className=\"overflow-hidden hover-elevate active-elevate-2\"\n                data-testid={`category-card-${category.id}`}\n              >\n                <div className=\"h-48 overflow-hidden\">\n                  <img\n                    src={category.imageUrl}\n                    alt={category.name}\n                    className=\"w-full h-full object-cover\"\n                  />\n                </div>\n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-start justify-between mb-3\">\n                    <div>\n                      <h3 className=\"text-2xl font-black text-primary mb-1\">{category.name}</h3>\n                      <p className=\"text-sm text-muted-foreground\">{category.ageRange}</p>\n                    </div>\n                  </div>\n                  <p className=\"text-muted-foreground mb-4 line-clamp-3\">{category.description}</p>\n                  <div className=\"mb-4 p-3 bg-muted/50 rounded-md\">\n                    <p className=\"text-sm font-semibold mb-1\">Objetivos:</p>\n                    <p className=\"text-sm text-muted-foreground\">{category.objectives}</p>\n                  </div>\n                  <Link href={`/categorias/${category.id}`}>\n                    <Button className=\"w-full\" variant=\"outline\" data-testid={`button-view-${category.id}`}>\n                      Ver Detalles\n                      <ChevronRight className=\"ml-2 h-4 w-4\" />\n                    </Button>\n                  </Link>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* CTA */}\n      <section className=\"py-20 bg-muted/30\">\n        <div className=\"container mx-auto px-4 text-center\">\n          <h2 className=\"text-4xl font-bold mb-6\">Encuentra Tu Categoría</h2>\n          <p className=\"text-xl text-muted-foreground mb-8 max-w-2xl mx-auto\">\n            ¿No estás seguro en qué categoría inscribirte? Contáctanos y te ayudaremos a encontrar el grupo perfecto según tu edad y nivel.\n          </p>\n          <Link href=\"/contacto\">\n            <Button size=\"lg\" data-testid=\"button-contact-category\">\n              Contáctanos\n            </Button>\n          </Link>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":6013},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"server/storage.ts":{"content":"import { db } from \"./db\";\nimport { eq, desc, and, gte, lte } from \"drizzle-orm\";\nimport {\n  type User,\n  type UpsertUser,\n  type InsertUser,\n  type PlayerProfile,\n  type InsertPlayerProfile,\n  type Coach,\n  type InsertCoach,\n  type NewsPost,\n  type InsertNewsPost,\n  type GalleryAlbum,\n  type InsertGalleryAlbum,\n  type GalleryImage,\n  type InsertGalleryImage,\n  type Tournament,\n  type InsertTournament,\n  type Match,\n  type InsertMatch,\n  type Standing,\n  type InsertStanding,\n  type PaymentConcept,\n  type InsertPaymentConcept,\n  type AccountReceivable,\n  type InsertAccountReceivable,\n  type Payment,\n  type InsertPayment,\n  type Document,\n  type InsertDocument,\n  type ContactSubmission,\n  type InsertContactSubmission,\n  type CategoryAchievement,\n  type InsertCategoryAchievement,\n  users,\n  playerProfiles,\n  coaches,\n  newsPosts,\n  galleryAlbums,\n  galleryImages,\n  tournaments,\n  matches,\n  standings,\n  paymentConcepts,\n  accountsReceivable,\n  payments,\n  documents,\n  contactSubmissions,\n  categoryAchievements,\n} from \"@shared/schema\";\n\nexport interface IStorage {\n  // Users\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n  updateUser(id: string, user: Partial<InsertUser>): Promise<User | undefined>;\n  upsertUser(user: UpsertUser): Promise<User>;\n\n  // Player Profiles\n  getPlayerProfile(userId: string): Promise<PlayerProfile | undefined>;\n  getPlayersByCategory(category: string): Promise<PlayerProfile[]>;\n  createPlayerProfile(profile: InsertPlayerProfile): Promise<PlayerProfile>;\n  updatePlayerProfile(userId: string, profile: Partial<InsertPlayerProfile>): Promise<PlayerProfile | undefined>;\n\n  // Coaches\n  getCoachesByCategory(category: string | null): Promise<Coach[]>;\n  createCoach(coach: InsertCoach): Promise<Coach>;\n  updateCoach(id: number, coach: Partial<InsertCoach>): Promise<Coach | undefined>;\n\n  // News\n  getNewsPosts(limit?: number): Promise<NewsPost[]>;\n  createNewsPost(post: InsertNewsPost): Promise<NewsPost>;\n  updateNewsPost(id: number, post: Partial<InsertNewsPost>): Promise<NewsPost | undefined>;\n  deleteNewsPost(id: number): Promise<boolean>;\n\n  // Galleries\n  getGalleryAlbums(): Promise<GalleryAlbum[]>;\n  getGalleryImages(albumId: number): Promise<GalleryImage[]>;\n  createGalleryAlbum(album: InsertGalleryAlbum): Promise<GalleryAlbum>;\n  createGalleryImage(image: InsertGalleryImage): Promise<GalleryImage>;\n\n  // Tournaments\n  getTournaments(): Promise<Tournament[]>;\n  createTournament(tournament: InsertTournament): Promise<Tournament>;\n\n  // Matches\n  getUpcomingMatches(): Promise<Match[]>;\n  getPastMatches(): Promise<Match[]>;\n  createMatch(match: InsertMatch): Promise<Match>;\n  updateMatch(id: number, match: Partial<InsertMatch>): Promise<Match | undefined>;\n\n  // Standings\n  getStandings(tournamentId?: number): Promise<Standing[]>;\n  createStanding(standing: InsertStanding): Promise<Standing>;\n  updateStanding(id: number, standing: Partial<InsertStanding>): Promise<Standing | undefined>;\n\n  // Payment Concepts\n  getPaymentConcepts(active?: boolean): Promise<PaymentConcept[]>;\n  createPaymentConcept(concept: InsertPaymentConcept): Promise<PaymentConcept>;\n  updatePaymentConcept(id: number, concept: Partial<InsertPaymentConcept>): Promise<PaymentConcept | undefined>;\n\n  // Accounts Receivable\n  getAccountsByUser(userId: string): Promise<AccountReceivable[]>;\n  getAllAccounts(status?: string): Promise<AccountReceivable[]>;\n  createAccountReceivable(account: InsertAccountReceivable): Promise<AccountReceivable>;\n  updateAccountReceivable(id: number, account: Partial<InsertAccountReceivable>): Promise<AccountReceivable | undefined>;\n\n  // Payments\n  recordPayment(payment: InsertPayment): Promise<Payment>;\n  getPaymentsByUser(userId: string): Promise<Payment[]>;\n\n  // Documents\n  getDocumentsByUser(userId: string): Promise<Document[]>;\n  getPendingDocuments(): Promise<Document[]>;\n  createDocument(document: InsertDocument): Promise<Document>;\n  updateDocument(id: number, document: Partial<InsertDocument>): Promise<Document | undefined>;\n\n  // Contact Submissions\n  createContactSubmission(submission: InsertContactSubmission): Promise<ContactSubmission>;\n\n  // Category Achievements\n  getAchievementsByCategory(categoryId: string): Promise<CategoryAchievement[]>;\n  createAchievement(achievement: InsertCategoryAchievement): Promise<CategoryAchievement>;\n}\n\nexport class DatabaseStorage implements IStorage {\n  // Users\n  async getUser(id: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.id, id));\n    return user;\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.username, username));\n    return user;\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const [user] = await db.insert(users).values(insertUser).returning();\n    return user;\n  }\n\n  async updateUser(id: string, updateData: Partial<InsertUser>): Promise<User | undefined> {\n    const [user] = await db.update(users).set(updateData).where(eq(users.id, id)).returning();\n    return user;\n  }\n\n  async upsertUser(userData: UpsertUser): Promise<User> {\n    const [user] = await db\n      .insert(users)\n      .values(userData)\n      .onConflictDoUpdate({\n        target: users.id,\n        set: {\n          ...userData,\n          updatedAt: new Date(),\n        },\n      })\n      .returning();\n    return user;\n  }\n\n  // Player Profiles\n  async getPlayerProfile(userId: string): Promise<PlayerProfile | undefined> {\n    const [profile] = await db.select().from(playerProfiles).where(eq(playerProfiles.userId, userId));\n    return profile;\n  }\n\n  async getPlayersByCategory(category: string): Promise<PlayerProfile[]> {\n    return await db.select().from(playerProfiles).where(eq(playerProfiles.category, category));\n  }\n\n  async createPlayerProfile(profile: InsertPlayerProfile): Promise<PlayerProfile> {\n    const [newProfile] = await db.insert(playerProfiles).values(profile).returning();\n    return newProfile;\n  }\n\n  async updatePlayerProfile(userId: string, updateData: Partial<InsertPlayerProfile>): Promise<PlayerProfile | undefined> {\n    const [profile] = await db.update(playerProfiles).set(updateData).where(eq(playerProfiles.userId, userId)).returning();\n    return profile;\n  }\n\n  // Coaches\n  async getCoachesByCategory(category: string | null): Promise<Coach[]> {\n    if (category === null) {\n      return await db.select().from(coaches).orderBy(desc(coaches.id));\n    }\n    return await db.select().from(coaches).where(eq(coaches.categoryId, category));\n  }\n\n  async createCoach(coach: InsertCoach): Promise<Coach> {\n    const [newCoach] = await db.insert(coaches).values(coach).returning();\n    return newCoach;\n  }\n\n  async updateCoach(id: number, updateData: Partial<InsertCoach>): Promise<Coach | undefined> {\n    const [coach] = await db.update(coaches).set(updateData).where(eq(coaches.id, id)).returning();\n    return coach;\n  }\n\n  // News\n  async getNewsPosts(limit: number = 10): Promise<NewsPost[]> {\n    return await db.select().from(newsPosts).where(eq(newsPosts.published, true)).orderBy(desc(newsPosts.publishedDate)).limit(limit);\n  }\n\n  async createNewsPost(post: InsertNewsPost): Promise<NewsPost> {\n    const [newPost] = await db.insert(newsPosts).values(post).returning();\n    return newPost;\n  }\n\n  async updateNewsPost(id: number, updateData: Partial<InsertNewsPost>): Promise<NewsPost | undefined> {\n    const [post] = await db.update(newsPosts).set(updateData).where(eq(newsPosts.id, id)).returning();\n    return post;\n  }\n\n  async deleteNewsPost(id: number): Promise<boolean> {\n    const result = await db.delete(newsPosts).where(eq(newsPosts.id, id));\n    return result.rowCount !== null && result.rowCount > 0;\n  }\n\n  // Galleries\n  async getGalleryAlbums(): Promise<GalleryAlbum[]> {\n    return await db.select().from(galleryAlbums).orderBy(desc(galleryAlbums.createdDate));\n  }\n\n  async getGalleryImages(albumId: number): Promise<GalleryImage[]> {\n    return await db.select().from(galleryImages).where(eq(galleryImages.albumId, albumId)).orderBy(desc(galleryImages.id));\n  }\n\n  async createGalleryAlbum(album: InsertGalleryAlbum): Promise<GalleryAlbum> {\n    const [newAlbum] = await db.insert(galleryAlbums).values(album).returning();\n    return newAlbum;\n  }\n\n  async createGalleryImage(image: InsertGalleryImage): Promise<GalleryImage> {\n    const [newImage] = await db.insert(galleryImages).values(image).returning();\n    return newImage;\n  }\n\n  // Tournaments\n  async getTournaments(): Promise<Tournament[]> {\n    return await db.select().from(tournaments).orderBy(desc(tournaments.startDate));\n  }\n\n  async createTournament(tournament: InsertTournament): Promise<Tournament> {\n    const [newTournament] = await db.insert(tournaments).values(tournament).returning();\n    return newTournament;\n  }\n\n  // Matches\n  async getUpcomingMatches(): Promise<Match[]> {\n    const now = new Date().toISOString();\n    return await db.select().from(matches).where(gte(matches.date, now)).orderBy(matches.date).limit(10);\n  }\n\n  async getPastMatches(): Promise<Match[]> {\n    const now = new Date().toISOString();\n    return await db.select().from(matches).where(lte(matches.date, now)).orderBy(desc(matches.date)).limit(10);\n  }\n\n  async createMatch(match: InsertMatch): Promise<Match> {\n    const [newMatch] = await db.insert(matches).values(match).returning();\n    return newMatch;\n  }\n\n  async updateMatch(id: number, updateData: Partial<InsertMatch>): Promise<Match | undefined> {\n    const [match] = await db.update(matches).set(updateData).where(eq(matches.id, id)).returning();\n    return match;\n  }\n\n  // Standings\n  async getStandings(tournamentId?: number): Promise<Standing[]> {\n    if (tournamentId) {\n      return await db.select().from(standings).where(eq(standings.tournamentId, tournamentId)).orderBy(standings.position);\n    }\n    return await db.select().from(standings).orderBy(standings.position);\n  }\n\n  async createStanding(standing: InsertStanding): Promise<Standing> {\n    const [newStanding] = await db.insert(standings).values(standing).returning();\n    return newStanding;\n  }\n\n  async updateStanding(id: number, updateData: Partial<InsertStanding>): Promise<Standing | undefined> {\n    const [standing] = await db.update(standings).set(updateData).where(eq(standings.id, id)).returning();\n    return standing;\n  }\n\n  // Payment Concepts\n  async getPaymentConcepts(active?: boolean): Promise<PaymentConcept[]> {\n    if (active !== undefined) {\n      return await db.select().from(paymentConcepts).where(eq(paymentConcepts.isActive, active));\n    }\n    return await db.select().from(paymentConcepts);\n  }\n\n  async createPaymentConcept(concept: InsertPaymentConcept): Promise<PaymentConcept> {\n    const [newConcept] = await db.insert(paymentConcepts).values(concept).returning();\n    return newConcept;\n  }\n\n  async updatePaymentConcept(id: number, updateData: Partial<InsertPaymentConcept>): Promise<PaymentConcept | undefined> {\n    const [concept] = await db.update(paymentConcepts).set(updateData).where(eq(paymentConcepts.id, id)).returning();\n    return concept;\n  }\n\n  // Accounts Receivable\n  async getAccountsByUser(userId: string): Promise<AccountReceivable[]> {\n    return await db.select().from(accountsReceivable).where(eq(accountsReceivable.userId, userId)).orderBy(accountsReceivable.dueDate);\n  }\n\n  async getAllAccounts(status?: string): Promise<AccountReceivable[]> {\n    if (status) {\n      return await db.select().from(accountsReceivable).where(eq(accountsReceivable.status, status)).orderBy(accountsReceivable.dueDate);\n    }\n    return await db.select().from(accountsReceivable).orderBy(accountsReceivable.dueDate);\n  }\n\n  async createAccountReceivable(account: InsertAccountReceivable): Promise<AccountReceivable> {\n    const [newAccount] = await db.insert(accountsReceivable).values(account).returning();\n    return newAccount;\n  }\n\n  async updateAccountReceivable(id: number, updateData: Partial<InsertAccountReceivable>): Promise<AccountReceivable | undefined> {\n    const [account] = await db.update(accountsReceivable).set(updateData).where(eq(accountsReceivable.id, id)).returning();\n    return account;\n  }\n\n  // Payments\n  async recordPayment(payment: InsertPayment): Promise<Payment> {\n    const [newPayment] = await db.insert(payments).values(payment).returning();\n    return newPayment;\n  }\n\n  async getPaymentsByUser(userId: string): Promise<Payment[]> {\n    return await db.select().from(payments).where(eq(payments.userId, userId)).orderBy(desc(payments.paymentDate));\n  }\n\n  // Documents\n  async getDocumentsByUser(userId: string): Promise<Document[]> {\n    return await db.select().from(documents).where(eq(documents.userId, userId)).orderBy(desc(documents.uploadedDate));\n  }\n\n  async getPendingDocuments(): Promise<Document[]> {\n    return await db.select().from(documents).where(eq(documents.status, \"pending\")).orderBy(desc(documents.uploadedDate));\n  }\n\n  async createDocument(document: InsertDocument): Promise<Document> {\n    const [newDocument] = await db.insert(documents).values(document).returning();\n    return newDocument;\n  }\n\n  async updateDocument(id: number, updateData: Partial<InsertDocument>): Promise<Document | undefined> {\n    const [document] = await db.update(documents).set(updateData).where(eq(documents.id, id)).returning();\n    return document;\n  }\n\n  // Contact Submissions\n  async createContactSubmission(submission: InsertContactSubmission): Promise<ContactSubmission> {\n    const [newSubmission] = await db.insert(contactSubmissions).values(submission).returning();\n    return newSubmission;\n  }\n\n  // Category Achievements\n  async getAchievementsByCategory(categoryId: string): Promise<CategoryAchievement[]> {\n    return await db.select().from(categoryAchievements).where(eq(categoryAchievements.categoryId, categoryId)).orderBy(desc(categoryAchievements.year));\n  }\n\n  async createAchievement(achievement: InsertCategoryAchievement): Promise<CategoryAchievement> {\n    const [newAchievement] = await db.insert(categoryAchievements).values(achievement).returning();\n    return newAchievement;\n  }\n}\n\nexport const storage = new DatabaseStorage();\n","size_bytes":14307},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/pages/Services.tsx":{"content":"import { PublicNav } from \"@/components/layout/PublicNav\";\nimport { Footer } from \"@/components/layout/Footer\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { GraduationCap, Dumbbell, Trophy, Heart, Clock, DollarSign } from \"lucide-react\";\n\nexport default function Services() {\n  const services = [\n    {\n      icon: GraduationCap,\n      title: \"Escuela de Formación Deportiva\",\n      description: \"Programa integral de formación en hockey en línea para niños y jóvenes. Enseñanza de fundamentos técnicos, tácticos y desarrollo de habilidades específicas del deporte.\",\n      features: [\n        \"Metodología progresiva por niveles\",\n        \"Grupos reducidos por edades\",\n        \"Material didáctico incluido\",\n        \"Evaluaciones periódicas\",\n      ],\n    },\n    {\n      icon: Dumbbell,\n      title: \"Preparación Física\",\n      description: \"Entrenamiento físico especializado diseñado para mejorar la condición atlética específica del hockey en línea.\",\n      features: [\n        \"Planes personalizados por categoría\",\n        \"Trabajo de fuerza y resistencia\",\n        \"Prevención de lesiones\",\n        \"Nutrición deportiva básica\",\n      ],\n    },\n    {\n      icon: Trophy,\n      title: \"Participación en Torneos\",\n      description: \"Representación del club en competencias locales, regionales y nacionales. Experiencia competitiva real para todos los niveles.\",\n      features: [\n        \"Torneos federados\",\n        \"Campeonatos inter-clubes\",\n        \"Copa nacional\",\n        \"Eventos amistosos\",\n      ],\n    },\n    {\n      icon: Heart,\n      title: \"Desarrollo Integral\",\n      description: \"Formación en valores y habilidades para la vida a través del deporte.\",\n      features: [\n        \"Trabajo en equipo\",\n        \"Liderazgo y comunicación\",\n        \"Gestión emocional\",\n        \"Disciplina y compromiso\",\n      ],\n    },\n  ];\n\n  const schedules = [\n    { category: \"Sub 8 y Sub 12\", days: \"Martes y Jueves\", time: \"4:00 PM - 5:30 PM\" },\n    { category: \"Sub 14 y Sub 16\", days: \"Lunes, Miércoles y Viernes\", time: \"5:30 PM - 7:00 PM\" },\n    { category: \"Sub 18 y Mayores\", days: \"Lunes, Miércoles y Viernes\", time: \"7:00 PM - 9:00 PM\" },\n    { category: \"Preparación Física (Todas)\", days: \"Sábados\", time: \"9:00 AM - 11:00 AM\" },\n  ];\n\n  const plans = [\n    {\n      name: \"Plan Básico\",\n      price: \"$180.000\",\n      period: \"mensual\",\n      features: [\n        \"2 entrenamientos por semana\",\n        \"Acceso a instalaciones\",\n        \"Seguro deportivo\",\n        \"Camiseta del club\",\n      ],\n    },\n    {\n      name: \"Plan Competitivo\",\n      price: \"$280.000\",\n      period: \"mensual\",\n      features: [\n        \"3 entrenamientos por semana\",\n        \"Preparación física incluida\",\n        \"Participación en torneos\",\n        \"Uniforme completo\",\n        \"Seguro deportivo\",\n      ],\n      popular: true,\n    },\n    {\n      name: \"Plan Elite\",\n      price: \"$380.000\",\n      period: \"mensual\",\n      features: [\n        \"Entrenamientos ilimitados\",\n        \"Preparación física personalizada\",\n        \"Todos los torneos incluidos\",\n        \"Kit completo de equipamiento\",\n        \"Análisis de video\",\n        \"Nutrición deportiva\",\n      ],\n    },\n  ];\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <PublicNav />\n\n      {/* Hero */}\n      <section className=\"py-20 md:py-32 bg-gradient-to-br from-primary to-primary/80 text-primary-foreground\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"max-w-4xl mx-auto text-center\">\n            <h1 className=\"text-5xl md:text-7xl font-black mb-6 tracking-tight uppercase\">\n              Servicios\n            </h1>\n            <p className=\"text-xl md:text-2xl opacity-90\">\n              Programas de entrenamiento profesional para todas las edades y niveles\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Services */}\n      <section className=\"py-20\">\n        <div className=\"container mx-auto px-4\">\n          <h2 className=\"text-4xl font-bold mb-12 text-center\">Lo Que Ofrecemos</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 max-w-6xl mx-auto\">\n            {services.map((service, index) => (\n              <Card key={index} data-testid={`service-card-${index}`}>\n                <CardHeader>\n                  <div className=\"w-16 h-16 rounded-full bg-primary/10 flex items-center justify-center mb-4\">\n                    <service.icon className=\"h-8 w-8 text-primary\" />\n                  </div>\n                  <CardTitle className=\"text-2xl\">{service.title}</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-muted-foreground mb-4\">{service.description}</p>\n                  <ul className=\"space-y-2\">\n                    {service.features.map((feature, i) => (\n                      <li key={i} className=\"flex items-start gap-2 text-sm\">\n                        <div className=\"w-1.5 h-1.5 rounded-full bg-primary mt-2 flex-shrink-0\" />\n                        <span>{feature}</span>\n                      </li>\n                    ))}\n                  </ul>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Schedules */}\n      <section className=\"py-20 bg-muted/30\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"max-w-4xl mx-auto\">\n            <div className=\"text-center mb-12\">\n              <Clock className=\"h-12 w-12 text-primary mx-auto mb-4\" />\n              <h2 className=\"text-4xl font-bold mb-4\">Horarios de Entrenamiento</h2>\n              <p className=\"text-muted-foreground\">\n                Entrenamientos estructurados por categoría para maximizar el desarrollo\n              </p>\n            </div>\n            <div className=\"space-y-4\">\n              {schedules.map((schedule, index) => (\n                <Card key={index} data-testid={`schedule-${index}`}>\n                  <CardContent className=\"p-6\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 items-center\">\n                      <div className=\"font-bold text-lg\">{schedule.category}</div>\n                      <div className=\"text-muted-foreground\">{schedule.days}</div>\n                      <div className=\"font-mono text-primary md:text-right\">{schedule.time}</div>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Pricing Plans */}\n      <section className=\"py-20\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-12\">\n            <DollarSign className=\"h-12 w-12 text-primary mx-auto mb-4\" />\n            <h2 className=\"text-4xl font-bold mb-4\">Planes de Membresía</h2>\n            <p className=\"text-muted-foreground max-w-2xl mx-auto\">\n              Elige el plan que mejor se adapte a tus objetivos deportivos. Todos incluyen seguro deportivo y acceso a instalaciones.\n            </p>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 max-w-6xl mx-auto\">\n            {plans.map((plan, index) => (\n              <Card\n                key={index}\n                className={plan.popular ? \"border-primary border-2\" : \"\"}\n                data-testid={`plan-card-${index}`}\n              >\n                {plan.popular && (\n                  <div className=\"bg-primary text-primary-foreground text-center py-2 text-sm font-semibold\">\n                    MÁS POPULAR\n                  </div>\n                )}\n                <CardHeader>\n                  <CardTitle className=\"text-2xl\">{plan.name}</CardTitle>\n                  <div className=\"mt-4\">\n                    <span className=\"text-4xl font-black\">{plan.price}</span>\n                    <span className=\"text-muted-foreground ml-2\">/ {plan.period}</span>\n                  </div>\n                </CardHeader>\n                <CardContent>\n                  <ul className=\"space-y-3 mb-6\">\n                    {plan.features.map((feature, i) => (\n                      <li key={i} className=\"flex items-start gap-2\">\n                        <div className=\"w-1.5 h-1.5 rounded-full bg-primary mt-2 flex-shrink-0\" />\n                        <span className=\"text-sm\">{feature}</span>\n                      </li>\n                    ))}\n                  </ul>\n                  <a href=\"/api/login\">\n                    <Button\n                      className=\"w-full\"\n                      variant={plan.popular ? \"default\" : \"outline\"}\n                      data-testid={`button-select-plan-${index}`}\n                    >\n                      Seleccionar Plan\n                    </Button>\n                  </a>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Enrollment Process */}\n      <section className=\"py-20 bg-muted/30\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"max-w-4xl mx-auto\">\n            <h2 className=\"text-4xl font-bold mb-12 text-center\">Proceso de Inscripción</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n              {[\n                { step: \"1\", title: \"Regístrate\", desc: \"Crea tu cuenta en línea\" },\n                { step: \"2\", title: \"Completa Datos\", desc: \"Información personal y médica\" },\n                { step: \"3\", title: \"Elige Tu Plan\", desc: \"Selecciona membresía\" },\n                { step: \"4\", title: \"¡Comienza!\", desc: \"Asiste a tu primera práctica\" },\n              ].map((item, index) => (\n                <div key={index} className=\"text-center\" data-testid={`enrollment-step-${index}`}>\n                  <div className=\"w-16 h-16 rounded-full bg-primary text-primary-foreground flex items-center justify-center text-2xl font-black mx-auto mb-4\">\n                    {item.step}\n                  </div>\n                  <h3 className=\"font-bold mb-2\">{item.title}</h3>\n                  <p className=\"text-sm text-muted-foreground\">{item.desc}</p>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA */}\n      <section className=\"py-20 bg-primary text-primary-foreground\">\n        <div className=\"container mx-auto px-4 text-center\">\n          <h2 className=\"text-4xl font-bold mb-6\">¿Listo para Comenzar?</h2>\n          <p className=\"text-xl mb-8 max-w-2xl mx-auto opacity-90\">\n            Únete a Wild Dogs hoy y comienza tu camino hacia la excelencia deportiva\n          </p>\n          <a href=\"/api/login\" data-testid=\"button-cta-enroll\">\n            <Button\n              size=\"lg\"\n              variant=\"outline\"\n              className=\"bg-primary-foreground text-primary hover-elevate active-elevate-2\"\n            >\n              Inscríbete Ahora\n            </Button>\n          </a>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":11112},"design_guidelines.md":{"content":"# Wild Dogs Hockey Club - Design Guidelines\n\n## Design Approach\n\n**Hybrid Strategy**: Sports-inspired visual identity for public sections + streamlined utility design for administrative tools, drawing inspiration from professional sports team websites (FC Barcelona, NBA teams) combined with Material Design principles for data management interfaces.\n\n## Core Design Principles\n\n1. **Energy & Motion**: Convey the dynamic nature of hockey through bold layouts and strategic visual hierarchy\n2. **Community & Trust**: Build confidence in parents/guardians while creating team belonging for players  \n3. **Colombian Context**: Modern international sports aesthetic adapted for Bogotá audience\n4. **Dual Purpose**: Inspiring public face + efficient internal management\n\n## Color Palette\n\n### Primary Brand Colors\n**Dark Mode** (default for admin sections):\n- Primary: 220 85% 45% (Deep Hockey Blue)\n- Background: 220 15% 12% (Charcoal)\n- Surface: 220 12% 16% (Elevated Dark)\n- Text Primary: 0 0% 95%\n- Text Secondary: 0 0% 70%\n\n**Light Mode** (public sections):\n- Primary: 220 85% 48% (Vibrant Blue)\n- Secondary: 15 85% 52% (Energy Orange - accent sparingly)\n- Background: 0 0% 98%\n- Surface: 0 0% 100%\n- Text: 220 15% 15%\n\n**Semantic Colors**:\n- Success/Paid: 142 70% 45%\n- Warning/Due Soon: 38 92% 50%\n- Error/Overdue: 0 72% 51%\n- Info: 199 89% 48%\n\n## Typography\n\n**Font Families**:\n- Display/Headers: 'Inter' (700-900 weights) - bold, modern, sports-appropriate\n- Body Text: 'Inter' (400-600 weights)\n- Data/Numbers: 'JetBrains Mono' for statistics, scores, financial figures\n\n**Scale**:\n- Hero Headlines: text-6xl to text-8xl (bold, uppercase for impact)\n- Section Headers: text-4xl to text-5xl\n- Subsections: text-2xl to text-3xl\n- Body: text-base to text-lg\n- Captions: text-sm\n\n## Layout System\n\n**Spacing Primitives**: Use Tailwind units of 2, 4, 8, 12, 16, 20, 24, 32 for consistent rhythm\n\n**Container Strategy**:\n- Full-width: Public hero sections, image backgrounds\n- Constrained: max-w-7xl for content sections\n- Reading width: max-w-4xl for text-heavy content\n\n**Section Padding**:\n- Desktop: py-20 to py-32\n- Mobile: py-12 to py-16\n\n## Public Section Components\n\n### Home Page\n- **Hero Section** (90vh): Full-screen action photo background with bold team name overlay, CTA buttons (\"Únete al Club\", \"Ver Categorías\") with backdrop blur\n- **Club Stats Strip**: 4-column metrics (Años de Historia, Jugadores Activos, Torneos Ganados, Categorías)\n- **News Slider**: Large cards with images, headlines, dates (3-4 recent posts)\n- **Quick Access Grid**: 2x2 on desktop to Categories, Services, Tournaments, Contact\n- **Photo Gallery Preview**: Masonry grid showcasing team moments\n- **CTA Banner**: Final conversion section with enrollment call-to-action\n\n### Categories Pages (Sub 8, Sub 12, Sub 14, Sub 16, Sub 18, Mayores)\n- **Hero**: Category-specific action photo, age range, training schedule\n- **Player Roster**: Grid layout (3-4 columns desktop, 1 mobile) with player cards containing photo, name, number, position - hover reveals basic stats\n- **Coaching Staff**: Horizontal card layout with photos, names, roles, brief bio\n- **Achievements Timeline**: Visual chronology of category victories\n- **Gallery**: 3-column grid of category photos\n\n### Tournaments & Results\n- **Upcoming Matches**: Card-based list with team logos, date/time, venue, map link\n- **Recent Results**: Score cards with expandable match details and statistics\n- **Standings Table**: Responsive data table with team rankings, points, goals\n- **Tournament Calendar**: Monthly view with color-coded matches by category\n\n## Private Section Components (Dark Mode)\n\n### Dashboard Layout\n- **Sidebar Navigation**: Fixed left panel (240px) with icons + labels, collapsible on mobile\n- **Top Bar**: User profile, notifications, quick actions\n- **Main Content**: max-w-7xl container with card-based layouts\n\n### Player Profile\n- **Profile Header**: Large card with photo, name, category, jersey number\n- **Status Indicators**: Pills showing payment status, document status, participation level\n- **Statistics Dashboard**: Grid of metric cards (Partidos Jugados, Goles, Asistencias)\n- **Payment Section**: Table of pending/paid amounts with status badges\n- **Documents**: Upload area with file list and status icons\n\n### Financial Management\n- **Payment Dashboard**: 3-column KPI cards (Total Recaudado, Por Cobrar, En Mora)\n- **Accounts Table**: Sortable/filterable data table with player names, amounts, due dates, actions\n- **Payment Recording Form**: Stepped form for logging payments with receipt generation\n- **Charts**: Line graphs for income trends, pie charts for payment distribution by category\n\n### Administrative Tools\n- **User Management**: Data table with filters, search, bulk actions\n- **Content Editor**: WYSIWYG editor for news/announcements\n- **Roster Manager**: Drag-and-drop interface for organizing player lists\n- **Approval Queue**: Card-based review system for pending registrations\n\n## Component Library\n\n### Buttons\n- Primary: Solid blue with white text\n- Secondary: Outline with blue border\n- Success: Green for confirmations\n- Danger: Red for deletions\n- On-image buttons: Always with backdrop-blur-sm\n\n### Cards\n- Shadow: shadow-md with hover:shadow-lg transition\n- Borders: rounded-lg (8px radius)\n- Padding: p-6 standard, p-4 compact\n\n### Forms\n- Input fields: Full-width with clear labels above\n- Dark mode inputs: Darker background (220 12% 14%) with lighter borders\n- Validation: Inline error messages in red, success in green\n- File uploads: Drag-and-drop zones with preview\n\n### Data Tables\n- Sticky headers for long lists\n- Striped rows for readability (even rows slightly darker)\n- Hover state: subtle highlight\n- Sortable columns with arrow indicators\n- Responsive: Stack to cards on mobile\n\n### Navigation\n- Public: Horizontal menu with logo left, links center, CTA button right\n- Sticky on scroll with background blur\n- Mobile: Hamburger menu with slide-out drawer\n- Private: Vertical sidebar with icon-first design\n\n## Images\n\n### Required Photography\n1. **Home Hero**: Wide action shot of team playing (1920x1080+), vibrant and energetic\n2. **Category Heroes**: Each category needs action photo (1600x900)\n3. **Player Photos**: Headshots (400x400) against neutral background\n4. **Coach Photos**: Professional headshots (300x300)\n5. **Gallery Images**: Varied aspect ratios, minimum 800px wide\n6. **About Section**: Team group photo, facility images, trophy shots\n\n### Image Treatment\n- Public sections: Full-bleed backgrounds with gradient overlays (dark gradient from bottom for text legibility)\n- Player cards: Circular crops with subtle border\n- News/Galleries: Maintain aspect ratios, use object-cover for consistency\n- Optimize all images for web (WebP format preferred)\n\n## Animations\n\n**Use Sparingly**:\n- Fade-in on scroll for section entries (intersection observer)\n- Subtle hover lifts on cards (transform: translateY(-4px))\n- Smooth transitions on state changes (transition-all duration-200)\n- Loading spinners for async operations\n- **No auto-playing sliders** - user-controlled only\n\n## Accessibility\n\n- WCAG AA contrast ratios minimum\n- Focus indicators on all interactive elements (2px blue ring)\n- Alt text for all images\n- Semantic HTML structure\n- Keyboard navigation support\n- Screen reader labels for icon-only buttons\n- Form labels always visible (no placeholder-only inputs)\n\n## Responsive Breakpoints\n\n- Mobile: < 640px (single column, stacked layout)\n- Tablet: 640px - 1024px (2 columns for grids)\n- Desktop: 1024px+ (full multi-column layouts)\n\nPriority: Mobile-first approach for public sections, desktop-optimized for admin panels\n\n---\n\nThis design creates a professional, energetic digital presence that honors the Wild Dogs hockey spirit while providing robust utility for club management.","size_bytes":7844},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/pages/Contact.tsx":{"content":"import { PublicNav } from \"@/components/layout/PublicNav\";\nimport { Footer } from \"@/components/layout/Footer\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Label } from \"@/components/ui/label\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { insertContactSubmissionSchema } from \"@shared/schema\";\nimport type { InsertContactSubmission } from \"@shared/schema\";\nimport { MapPin, Phone, Mail, Clock } from \"lucide-react\";\nimport { z } from \"zod\";\n\nconst contactFormSchema = insertContactSubmissionSchema.extend({\n  name: z.string().min(2, \"El nombre debe tener al menos 2 caracteres\"),\n  email: z.string().email(\"Email inválido\"),\n  subject: z.string().min(3, \"El asunto debe tener al menos 3 caracteres\"),\n  message: z.string().min(10, \"El mensaje debe tener al menos 10 caracteres\"),\n});\n\ntype ContactFormData = z.infer<typeof contactFormSchema>;\n\nexport default function Contact() {\n  const { toast } = useToast();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm<ContactFormData>({\n    resolver: zodResolver(contactFormSchema),\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      subject: \"\",\n      message: \"\",\n    },\n  });\n\n  const mutation = useMutation({\n    mutationFn: async (data: InsertContactSubmission) => {\n      return await apiRequest(\"POST\", \"/api/contact\", data);\n    },\n    onSuccess: () => {\n      toast({\n        title: \"Mensaje Enviado\",\n        description: \"Gracias por contactarnos. Te responderemos pronto.\",\n      });\n      reset();\n    },\n    onError: () => {\n      toast({\n        title: \"Error\",\n        description: \"Hubo un problema al enviar tu mensaje. Intenta nuevamente.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const onSubmit = (data: ContactFormData) => {\n    mutation.mutate(data);\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <PublicNav />\n\n      {/* Hero */}\n      <section className=\"py-20 md:py-32 bg-gradient-to-br from-primary to-primary/80 text-primary-foreground\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"max-w-4xl mx-auto text-center\">\n            <h1 className=\"text-5xl md:text-7xl font-black mb-6 tracking-tight uppercase\">\n              Contacto\n            </h1>\n            <p className=\"text-xl md:text-2xl opacity-90\">\n              ¿Tienes preguntas? Estamos aquí para ayudarte\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Contact Form & Info */}\n      <section className=\"py-20\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8 max-w-6xl mx-auto\">\n            {/* Contact Form */}\n            <div className=\"lg:col-span-2\">\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"text-2xl\">Envíanos un Mensaje</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"name\">Nombre Completo *</Label>\n                        <Input\n                          id=\"name\"\n                          data-testid=\"input-name\"\n                          {...register(\"name\")}\n                          placeholder=\"Juan Pérez\"\n                        />\n                        {errors.name && (\n                          <p className=\"text-sm text-destructive\">{errors.name.message}</p>\n                        )}\n                      </div>\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"email\">Email *</Label>\n                        <Input\n                          id=\"email\"\n                          type=\"email\"\n                          data-testid=\"input-email\"\n                          {...register(\"email\")}\n                          placeholder=\"juan@ejemplo.com\"\n                        />\n                        {errors.email && (\n                          <p className=\"text-sm text-destructive\">{errors.email.message}</p>\n                        )}\n                      </div>\n                    </div>\n\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"phone\">Teléfono</Label>\n                      <Input\n                        id=\"phone\"\n                        data-testid=\"input-phone\"\n                        {...register(\"phone\")}\n                        placeholder=\"+57 300 123 4567\"\n                      />\n                      {errors.phone && (\n                        <p className=\"text-sm text-destructive\">{errors.phone.message}</p>\n                      )}\n                    </div>\n\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"subject\">Asunto *</Label>\n                      <Input\n                        id=\"subject\"\n                        data-testid=\"input-subject\"\n                        {...register(\"subject\")}\n                        placeholder=\"Consulta sobre inscripción\"\n                      />\n                      {errors.subject && (\n                        <p className=\"text-sm text-destructive\">{errors.subject.message}</p>\n                      )}\n                    </div>\n\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"message\">Mensaje *</Label>\n                      <Textarea\n                        id=\"message\"\n                        rows={6}\n                        data-testid=\"input-message\"\n                        {...register(\"message\")}\n                        placeholder=\"Escribe tu mensaje aquí...\"\n                      />\n                      {errors.message && (\n                        <p className=\"text-sm text-destructive\">{errors.message.message}</p>\n                      )}\n                    </div>\n\n                    <Button\n                      type=\"submit\"\n                      size=\"lg\"\n                      className=\"w-full\"\n                      disabled={mutation.isPending}\n                      data-testid=\"button-submit-contact\"\n                    >\n                      {mutation.isPending ? \"Enviando...\" : \"Enviar Mensaje\"}\n                    </Button>\n                  </form>\n                </CardContent>\n              </Card>\n            </div>\n\n            {/* Contact Info */}\n            <div className=\"space-y-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Información de Contacto</CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div className=\"flex items-start gap-3\">\n                    <MapPin className=\"h-5 w-5 text-primary mt-0.5 flex-shrink-0\" />\n                    <div>\n                      <div className=\"font-semibold mb-1\">Dirección</div>\n                      <p className=\"text-sm text-muted-foreground\">\n                        Calle 123 #45-67<br />\n                        Bogotá, Colombia\n                      </p>\n                    </div>\n                  </div>\n                  <div className=\"flex items-start gap-3\">\n                    <Phone className=\"h-5 w-5 text-primary mt-0.5 flex-shrink-0\" />\n                    <div>\n                      <div className=\"font-semibold mb-1\">Teléfono</div>\n                      <a\n                        href=\"tel:+573001234567\"\n                        className=\"text-sm text-muted-foreground hover:text-primary transition-colors\"\n                      >\n                        +57 300 123 4567\n                      </a>\n                    </div>\n                  </div>\n                  <div className=\"flex items-start gap-3\">\n                    <Mail className=\"h-5 w-5 text-primary mt-0.5 flex-shrink-0\" />\n                    <div>\n                      <div className=\"font-semibold mb-1\">Email</div>\n                      <a\n                        href=\"mailto:info@wilddogshockey.com\"\n                        className=\"text-sm text-muted-foreground hover:text-primary transition-colors\"\n                      >\n                        info@wilddogshockey.com\n                      </a>\n                    </div>\n                  </div>\n                  <div className=\"flex items-start gap-3\">\n                    <Clock className=\"h-5 w-5 text-primary mt-0.5 flex-shrink-0\" />\n                    <div>\n                      <div className=\"font-semibold mb-1\">Horarios de Atención</div>\n                      <p className=\"text-sm text-muted-foreground\">\n                        Lunes a Viernes: 3:00 PM - 9:00 PM<br />\n                        Sábados: 9:00 AM - 2:00 PM<br />\n                        Domingos: Cerrado\n                      </p>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader>\n                  <CardTitle>Ubicación</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"aspect-square rounded-md overflow-hidden bg-muted\">\n                    <iframe\n                      src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d127283.45144826838!2d-74.15395644999999!3d4.624335349999999!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x8e3f9bfd2da6cb29%3A0x239d635520a33914!2zQm9nb3TDoSwgQ29sb21iaWE!5e0!3m2!1sen!2sus!4v1234567890123!5m2!1sen!2sus\"\n                      width=\"100%\"\n                      height=\"100%\"\n                      style={{ border: 0 }}\n                      allowFullScreen\n                      loading=\"lazy\"\n                      referrerPolicy=\"no-referrer-when-downgrade\"\n                      title=\"Wild Dogs Location\"\n                    />\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":10441},"shared/schema.ts":{"content":"import { sql } from 'drizzle-orm';\nimport { relations } from 'drizzle-orm';\nimport {\n  index,\n  jsonb,\n  pgTable,\n  timestamp,\n  varchar,\n  text,\n  integer,\n  boolean,\n  decimal,\n  date,\n  pgEnum,\n} from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\n// ============================================\n// ENUMS\n// ============================================\n\nexport const userRoleEnum = pgEnum('user_role', ['admin', 'coach', 'player', 'guardian']);\nexport const userStatusEnum = pgEnum('user_status', ['pending', 'approved', 'rejected', 'inactive']);\nexport const genderEnum = pgEnum('gender', ['male', 'female', 'other']);\nexport const positionEnum = pgEnum('position', ['forward', 'defense', 'goalie']);\nexport const categoryEnum = pgEnum('category', ['sub8', 'sub12', 'sub14', 'sub16', 'sub18', 'mayores']);\nexport const documentTypeEnum = pgEnum('document_type', ['id', 'eps', 'medical', 'image_rights', 'other']);\nexport const documentStatusEnum = pgEnum('document_status', ['pending', 'approved', 'rejected']);\nexport const paymentMethodEnum = pgEnum('payment_method', ['cash', 'transfer', 'card', 'other']);\nexport const accountStatusEnum = pgEnum('account_status', ['pending', 'paid', 'overdue']);\nexport const frequencyEnum = pgEnum('frequency', ['once', 'monthly', 'quarterly', 'annual']);\nexport const matchResultEnum = pgEnum('match_result', ['win', 'loss', 'draw']);\nexport const newsStatusEnum = pgEnum('news_status', ['draft', 'published']);\n\n// ============================================\n// SESSION & AUTH TABLES (Required for Replit Auth)\n// ============================================\n\nexport const sessions = pgTable(\n  \"sessions\",\n  {\n    sid: varchar(\"sid\").primaryKey(),\n    sess: jsonb(\"sess\").notNull(),\n    expire: timestamp(\"expire\").notNull(),\n  },\n  (table) => [index(\"IDX_session_expire\").on(table.expire)],\n);\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  email: varchar(\"email\").unique(),\n  firstName: varchar(\"first_name\"),\n  lastName: varchar(\"last_name\"),\n  profileImageUrl: varchar(\"profile_image_url\"),\n  role: userRoleEnum(\"role\").default('player').notNull(),\n  status: userStatusEnum(\"status\").default('pending').notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport type UpsertUser = typeof users.$inferInsert;\nexport type User = typeof users.$inferSelect;\n\n// ============================================\n// PLAYER PROFILES\n// ============================================\n\nexport const playerProfiles = pgTable(\"player_profiles\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").references(() => users.id, { onDelete: 'cascade' }).notNull().unique(),\n  documentType: varchar(\"document_type\", { length: 50 }),\n  documentNumber: varchar(\"document_number\", { length: 50 }),\n  dateOfBirth: date(\"date_of_birth\"),\n  gender: genderEnum(\"gender\"),\n  phone: varchar(\"phone\", { length: 50 }),\n  address: text(\"address\"),\n  category: categoryEnum(\"category\").notNull(),\n  position: positionEnum(\"position\"),\n  jerseyNumber: integer(\"jersey_number\"),\n  uniformSize: varchar(\"uniform_size\", { length: 10 }),\n  \n  // Guardian info (for minors)\n  guardianName: varchar(\"guardian_name\", { length: 255 }),\n  guardianRelationship: varchar(\"guardian_relationship\", { length: 100 }),\n  guardianDocument: varchar(\"guardian_document\", { length: 50 }),\n  guardianPhone: varchar(\"guardian_phone\", { length: 50 }),\n  guardianEmail: varchar(\"guardian_email\", { length: 255 }),\n  \n  // Medical info\n  bloodType: varchar(\"blood_type\", { length: 10 }),\n  allergies: text(\"allergies\"),\n  medicalConditions: text(\"medical_conditions\"),\n  emergencyContact: varchar(\"emergency_contact\", { length: 255 }),\n  emergencyPhone: varchar(\"emergency_phone\", { length: 50 }),\n  \n  // Stats\n  gamesPlayed: integer(\"games_played\").default(0),\n  goals: integer(\"goals\").default(0),\n  assists: integer(\"assists\").default(0),\n  \n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport const playerProfileRelations = relations(playerProfiles, ({ one, many }) => ({\n  user: one(users, {\n    fields: [playerProfiles.userId],\n    references: [users.id],\n  }),\n  documents: many(documents),\n  accountsReceivable: many(accountsReceivable),\n}));\n\nexport const insertPlayerProfileSchema = createInsertSchema(playerProfiles).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport type InsertPlayerProfile = z.infer<typeof insertPlayerProfileSchema>;\nexport type PlayerProfile = typeof playerProfiles.$inferSelect;\n\n// ============================================\n// CATEGORIES\n// ============================================\n\nexport const categories = pgTable(\"categories\", {\n  id: varchar(\"id\").primaryKey(),\n  name: varchar(\"name\", { length: 100 }).notNull(),\n  ageMin: integer(\"age_min\").notNull(),\n  ageMax: integer(\"age_max\"),\n  description: text(\"description\"),\n  trainingSchedule: text(\"training_schedule\"),\n  objectives: text(\"objectives\"),\n  imageUrl: varchar(\"image_url\", { length: 500 }),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport const categoryRelations = relations(categories, ({ many }) => ({\n  coaches: many(coaches),\n  achievements: many(categoryAchievements),\n}));\n\nexport const insertCategorySchema = createInsertSchema(categories).omit({\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport type InsertCategory = z.infer<typeof insertCategorySchema>;\nexport type Category = typeof categories.$inferSelect;\n\n// ============================================\n// COACHES\n// ============================================\n\nexport const coaches = pgTable(\"coaches\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  categoryId: varchar(\"category_id\").references(() => categories.id, { onDelete: 'cascade' }).notNull(),\n  name: varchar(\"name\", { length: 255 }).notNull(),\n  role: varchar(\"role\", { length: 100 }).notNull(), // e.g., \"Head Coach\", \"Assistant\", \"Physical Trainer\"\n  photoUrl: varchar(\"photo_url\", { length: 500 }),\n  bio: text(\"bio\"),\n  experience: text(\"experience\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport const coachRelations = relations(coaches, ({ one }) => ({\n  category: one(categories, {\n    fields: [coaches.categoryId],\n    references: [categories.id],\n  }),\n}));\n\nexport const insertCoachSchema = createInsertSchema(coaches).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport type InsertCoach = z.infer<typeof insertCoachSchema>;\nexport type Coach = typeof coaches.$inferSelect;\n\n// ============================================\n// CATEGORY ACHIEVEMENTS\n// ============================================\n\nexport const categoryAchievements = pgTable(\"category_achievements\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  categoryId: varchar(\"category_id\").references(() => categories.id, { onDelete: 'cascade' }).notNull(),\n  title: varchar(\"title\", { length: 255 }).notNull(),\n  description: text(\"description\"),\n  year: integer(\"year\").notNull(),\n  imageUrl: varchar(\"image_url\", { length: 500 }),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const categoryAchievementRelations = relations(categoryAchievements, ({ one }) => ({\n  category: one(categories, {\n    fields: [categoryAchievements.categoryId],\n    references: [categories.id],\n  }),\n}));\n\nexport const insertCategoryAchievementSchema = createInsertSchema(categoryAchievements).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport type InsertCategoryAchievement = z.infer<typeof insertCategoryAchievementSchema>;\nexport type CategoryAchievement = typeof categoryAchievements.$inferSelect;\n\n// ============================================\n// NEWS & ANNOUNCEMENTS\n// ============================================\n\nexport const newsPosts = pgTable(\"news_posts\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  title: varchar(\"title\", { length: 255 }).notNull(),\n  content: text(\"content\").notNull(),\n  excerpt: text(\"excerpt\"),\n  imageUrl: varchar(\"image_url\", { length: 500 }),\n  status: newsStatusEnum(\"status\").default('published').notNull(),\n  publishedAt: timestamp(\"published_at\").defaultNow(),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport const insertNewsPostSchema = createInsertSchema(newsPosts).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport type InsertNewsPost = z.infer<typeof insertNewsPostSchema>;\nexport type NewsPost = typeof newsPosts.$inferSelect;\n\n// ============================================\n// GALLERY\n// ============================================\n\nexport const galleryAlbums = pgTable(\"gallery_albums\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  title: varchar(\"title\", { length: 255 }).notNull(),\n  description: text(\"description\"),\n  categoryId: varchar(\"category_id\").references(() => categories.id, { onDelete: 'set null' }),\n  coverImageUrl: varchar(\"cover_image_url\", { length: 500 }),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport const galleryAlbumRelations = relations(galleryAlbums, ({ many, one }) => ({\n  images: many(galleryImages),\n  category: one(categories, {\n    fields: [galleryAlbums.categoryId],\n    references: [categories.id],\n  }),\n}));\n\nexport const galleryImages = pgTable(\"gallery_images\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  albumId: varchar(\"album_id\").references(() => galleryAlbums.id, { onDelete: 'cascade' }).notNull(),\n  imageUrl: varchar(\"image_url\", { length: 500 }).notNull(),\n  caption: text(\"caption\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const galleryImageRelations = relations(galleryImages, ({ one }) => ({\n  album: one(galleryAlbums, {\n    fields: [galleryImages.albumId],\n    references: [galleryAlbums.id],\n  }),\n}));\n\nexport const insertGalleryAlbumSchema = createInsertSchema(galleryAlbums).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertGalleryImageSchema = createInsertSchema(galleryImages).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport type InsertGalleryAlbum = z.infer<typeof insertGalleryAlbumSchema>;\nexport type GalleryAlbum = typeof galleryAlbums.$inferSelect;\nexport type InsertGalleryImage = z.infer<typeof insertGalleryImageSchema>;\nexport type GalleryImage = typeof galleryImages.$inferSelect;\n\n// ============================================\n// TOURNAMENTS & MATCHES\n// ============================================\n\nexport const tournaments = pgTable(\"tournaments\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: varchar(\"name\", { length: 255 }).notNull(),\n  categoryId: varchar(\"category_id\").references(() => categories.id, { onDelete: 'set null' }),\n  season: varchar(\"season\", { length: 100 }),\n  startDate: date(\"start_date\"),\n  endDate: date(\"end_date\"),\n  location: varchar(\"location\", { length: 255 }),\n  description: text(\"description\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport const tournamentRelations = relations(tournaments, ({ many, one }) => ({\n  matches: many(matches),\n  standings: many(standings),\n  category: one(categories, {\n    fields: [tournaments.categoryId],\n    references: [categories.id],\n  }),\n}));\n\nexport const matches = pgTable(\"matches\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  tournamentId: varchar(\"tournament_id\").references(() => tournaments.id, { onDelete: 'cascade' }),\n  categoryId: varchar(\"category_id\").references(() => categories.id, { onDelete: 'set null' }),\n  date: timestamp(\"date\").notNull(),\n  opponent: varchar(\"opponent\", { length: 255 }).notNull(),\n  location: varchar(\"location\", { length: 255 }),\n  homeScore: integer(\"home_score\"),\n  awayScore: integer(\"away_score\"),\n  result: matchResultEnum(\"result\"),\n  notes: text(\"notes\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport const matchRelations = relations(matches, ({ one }) => ({\n  tournament: one(tournaments, {\n    fields: [matches.tournamentId],\n    references: [tournaments.id],\n  }),\n  category: one(categories, {\n    fields: [matches.categoryId],\n    references: [categories.id],\n  }),\n}));\n\nexport const standings = pgTable(\"standings\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  tournamentId: varchar(\"tournament_id\").references(() => tournaments.id, { onDelete: 'cascade' }).notNull(),\n  teamName: varchar(\"team_name\", { length: 255 }).notNull(),\n  position: integer(\"position\").notNull(),\n  played: integer(\"played\").default(0).notNull(),\n  won: integer(\"won\").default(0).notNull(),\n  drawn: integer(\"drawn\").default(0).notNull(),\n  lost: integer(\"lost\").default(0).notNull(),\n  goalsFor: integer(\"goals_for\").default(0).notNull(),\n  goalsAgainst: integer(\"goals_against\").default(0).notNull(),\n  goalDifference: integer(\"goal_difference\").default(0).notNull(),\n  points: integer(\"points\").default(0).notNull(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport const standingRelations = relations(standings, ({ one }) => ({\n  tournament: one(tournaments, {\n    fields: [standings.tournamentId],\n    references: [tournaments.id],\n  }),\n}));\n\nexport const insertTournamentSchema = createInsertSchema(tournaments).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertMatchSchema = createInsertSchema(matches).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertStandingSchema = createInsertSchema(standings).omit({\n  id: true,\n  updatedAt: true,\n});\n\nexport type InsertTournament = z.infer<typeof insertTournamentSchema>;\nexport type Tournament = typeof tournaments.$inferSelect;\nexport type InsertMatch = z.infer<typeof insertMatchSchema>;\nexport type Match = typeof matches.$inferSelect;\nexport type InsertStanding = z.infer<typeof insertStandingSchema>;\nexport type Standing = typeof standings.$inferSelect;\n\n// ============================================\n// PAYMENT SYSTEM\n// ============================================\n\nexport const paymentConcepts = pgTable(\"payment_concepts\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: varchar(\"name\", { length: 255 }).notNull(),\n  description: text(\"description\"),\n  amount: decimal(\"amount\", { precision: 10, scale: 2 }).notNull(),\n  frequency: frequencyEnum(\"frequency\").notNull(),\n  applicableCategories: text(\"applicable_categories\").array(), // Array of category IDs\n  isActive: boolean(\"is_active\").default(true).notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport const paymentConceptRelations = relations(paymentConcepts, ({ many }) => ({\n  accountsReceivable: many(accountsReceivable),\n  payments: many(payments),\n}));\n\nexport const accountsReceivable = pgTable(\"accounts_receivable\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  playerProfileId: varchar(\"player_profile_id\").references(() => playerProfiles.id, { onDelete: 'cascade' }).notNull(),\n  conceptId: varchar(\"concept_id\").references(() => paymentConcepts.id, { onDelete: 'set null' }),\n  amount: decimal(\"amount\", { precision: 10, scale: 2 }).notNull(),\n  dueDate: date(\"due_date\").notNull(),\n  status: accountStatusEnum(\"status\").default('pending').notNull(),\n  description: text(\"description\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport const accountReceivableRelations = relations(accountsReceivable, ({ one, many }) => ({\n  playerProfile: one(playerProfiles, {\n    fields: [accountsReceivable.playerProfileId],\n    references: [playerProfiles.id],\n  }),\n  concept: one(paymentConcepts, {\n    fields: [accountsReceivable.conceptId],\n    references: [paymentConcepts.id],\n  }),\n  payments: many(paymentApplications),\n}));\n\nexport const payments = pgTable(\"payments\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  playerProfileId: varchar(\"player_profile_id\").references(() => playerProfiles.id, { onDelete: 'cascade' }).notNull(),\n  amount: decimal(\"amount\", { precision: 10, scale: 2 }).notNull(),\n  paymentDate: date(\"payment_date\").notNull(),\n  paymentMethod: paymentMethodEnum(\"payment_method\").notNull(),\n  referenceNumber: varchar(\"reference_number\", { length: 100 }),\n  notes: text(\"notes\"),\n  receiptNumber: varchar(\"receipt_number\", { length: 100 }).notNull().unique(),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  createdBy: varchar(\"created_by\").references(() => users.id),\n});\n\nexport const paymentRelations = relations(payments, ({ one, many }) => ({\n  playerProfile: one(playerProfiles, {\n    fields: [payments.playerProfileId],\n    references: [playerProfiles.id],\n  }),\n  applications: many(paymentApplications),\n  creator: one(users, {\n    fields: [payments.createdBy],\n    references: [users.id],\n  }),\n}));\n\n// Junction table to track which accounts a payment was applied to\nexport const paymentApplications = pgTable(\"payment_applications\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  paymentId: varchar(\"payment_id\").references(() => payments.id, { onDelete: 'cascade' }).notNull(),\n  accountId: varchar(\"account_id\").references(() => accountsReceivable.id, { onDelete: 'cascade' }).notNull(),\n  amount: decimal(\"amount\", { precision: 10, scale: 2 }).notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const paymentApplicationRelations = relations(paymentApplications, ({ one }) => ({\n  payment: one(payments, {\n    fields: [paymentApplications.paymentId],\n    references: [payments.id],\n  }),\n  account: one(accountsReceivable, {\n    fields: [paymentApplications.accountId],\n    references: [accountsReceivable.id],\n  }),\n}));\n\nexport const insertPaymentConceptSchema = createInsertSchema(paymentConcepts).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertAccountReceivableSchema = createInsertSchema(accountsReceivable).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertPaymentSchema = createInsertSchema(payments).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertPaymentApplicationSchema = createInsertSchema(paymentApplications).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport type InsertPaymentConcept = z.infer<typeof insertPaymentConceptSchema>;\nexport type PaymentConcept = typeof paymentConcepts.$inferSelect;\nexport type InsertAccountReceivable = z.infer<typeof insertAccountReceivableSchema>;\nexport type AccountReceivable = typeof accountsReceivable.$inferSelect;\nexport type InsertPayment = z.infer<typeof insertPaymentSchema>;\nexport type Payment = typeof payments.$inferSelect;\nexport type InsertPaymentApplication = z.infer<typeof insertPaymentApplicationSchema>;\nexport type PaymentApplication = typeof paymentApplications.$inferSelect;\n\n// ============================================\n// DOCUMENTS\n// ============================================\n\nexport const documents = pgTable(\"documents\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  playerProfileId: varchar(\"player_profile_id\").references(() => playerProfiles.id, { onDelete: 'cascade' }).notNull(),\n  type: documentTypeEnum(\"type\").notNull(),\n  fileUrl: varchar(\"file_url\", { length: 500 }).notNull(),\n  fileName: varchar(\"file_name\", { length: 255 }).notNull(),\n  status: documentStatusEnum(\"status\").default('pending').notNull(),\n  notes: text(\"notes\"),\n  uploadedAt: timestamp(\"uploaded_at\").defaultNow(),\n  reviewedAt: timestamp(\"reviewed_at\"),\n  reviewedBy: varchar(\"reviewed_by\").references(() => users.id),\n});\n\nexport const documentRelations = relations(documents, ({ one }) => ({\n  playerProfile: one(playerProfiles, {\n    fields: [documents.playerProfileId],\n    references: [playerProfiles.id],\n  }),\n  reviewer: one(users, {\n    fields: [documents.reviewedBy],\n    references: [users.id],\n  }),\n}));\n\nexport const insertDocumentSchema = createInsertSchema(documents).omit({\n  id: true,\n  uploadedAt: true,\n});\n\nexport type InsertDocument = z.infer<typeof insertDocumentSchema>;\nexport type Document = typeof documents.$inferSelect;\n\n// ============================================\n// CONTACT FORM SUBMISSIONS\n// ============================================\n\nexport const contactSubmissions = pgTable(\"contact_submissions\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: varchar(\"name\", { length: 255 }).notNull(),\n  email: varchar(\"email\", { length: 255 }).notNull(),\n  phone: varchar(\"phone\", { length: 50 }),\n  subject: varchar(\"subject\", { length: 255 }).notNull(),\n  message: text(\"message\").notNull(),\n  isRead: boolean(\"is_read\").default(false).notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const insertContactSubmissionSchema = createInsertSchema(contactSubmissions).omit({\n  id: true,\n  isRead: true,\n  createdAt: true,\n});\n\nexport type InsertContactSubmission = z.infer<typeof insertContactSubmissionSchema>;\nexport type ContactSubmission = typeof contactSubmissions.$inferSelect;\n","size_bytes":21468},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"server/routes.ts":{"content":"import type { Express, Request, Response, NextFunction } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { db } from \"./db\";\nimport { setupAuth, isAuthenticated as authMiddleware } from \"./replitAuth\";\nimport {\n  insertPlayerProfileSchema,\n  insertCoachSchema,\n  insertNewsPostSchema,\n  insertGalleryAlbumSchema,\n  insertGalleryImageSchema,\n  insertTournamentSchema,\n  insertMatchSchema,\n  insertStandingSchema,\n  insertPaymentConceptSchema,\n  insertAccountReceivableSchema,\n  insertPaymentSchema,\n  insertDocumentSchema,\n  insertContactSubmissionSchema,\n  insertCategoryAchievementSchema,\n  users,\n  playerProfiles,\n} from \"@shared/schema\";\nimport { eq } from \"drizzle-orm\";\n\n// Helper middleware using the auth from replitAuth\nconst isAuthenticated = authMiddleware;\n\n// Middleware to check if user is admin\nasync function isAdmin(req: Request, res: Response, next: NextFunction) {\n  if (!req.isAuthenticated()) {\n    return res.status(401).send(\"401: Unauthorized\");\n  }\n  \n  const user = req.user as any;\n  const userId = user.claims?.sub;\n  \n  if (!userId) {\n    return res.status(401).send(\"401: Unauthorized\");\n  }\n  \n  const dbUser = await storage.getUser(userId);\n  \n  if (!dbUser || dbUser.role !== \"admin\") {\n    return res.status(403).send(\"403: Forbidden - Admin access required\");\n  }\n  \n  next();\n}\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // ============================================\n  // AUTH SETUP & ROUTES\n  // ============================================\n  \n  // Setup Replit Auth\n  await setupAuth(app);\n  \n  // Get current user\n  app.get(\"/api/auth/user\", isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const user = req.user as any;\n      const userId = user.claims?.sub;\n      const dbUser = await storage.getUser(userId);\n      res.json(dbUser);\n    } catch (error: any) {\n      res.status(500).send(error.message);\n    }\n  });\n\n  // ============================================\n  // PUBLIC ROUTES\n  // ============================================\n\n  // Get all news posts\n  app.get(\"/api/news\", async (req: Request, res: Response) => {\n    try {\n      const limit = req.query.limit ? parseInt(req.query.limit as string) : 10;\n      const posts = await storage.getNewsPosts(limit);\n      res.json(posts);\n    } catch (error: any) {\n      res.status(500).send(error.message);\n    }\n  });\n\n  // Get gallery albums\n  app.get(\"/api/galleries\", async (req: Request, res: Response) => {\n    try {\n      const albums = await storage.getGalleryAlbums();\n      res.json(albums);\n    } catch (error: any) {\n      res.status(500).send(error.message);\n    }\n  });\n\n  // Get images for an album\n  app.get(\"/api/galleries/:albumId/images\", async (req: Request, res: Response) => {\n    try {\n      const albumId = parseInt(req.params.albumId);\n      const images = await storage.getGalleryImages(albumId);\n      res.json(images);\n    } catch (error: any) {\n      res.status(500).send(error.message);\n    }\n  });\n\n  // Get players by category with user info\n  app.get(\"/api/categories/:categoryId/players\", async (req: Request, res: Response) => {\n    try {\n      const categoryId = req.params.categoryId;\n      const profiles = await storage.getPlayersByCategory(categoryId);\n      \n      // Fetch user info for each player\n      const playersWithUsers = await Promise.all(\n        profiles.map(async (profile) => {\n          const user = await storage.getUser(profile.userId);\n          return { ...profile, user };\n        })\n      );\n      \n      res.json(playersWithUsers);\n    } catch (error: any) {\n      res.status(500).send(error.message);\n    }\n  });\n\n  // Get coaches by category\n  app.get(\"/api/categories/:categoryId/coaches\", async (req: Request, res: Response) => {\n    try {\n      const categoryId = req.params.categoryId === \"all\" ? null : req.params.categoryId;\n      const coaches = await storage.getCoachesByCategory(categoryId);\n      res.json(coaches);\n    } catch (error: any) {\n      res.status(500).send(error.message);\n    }\n  });\n\n  // Get category achievements\n  app.get(\"/api/categories/:categoryId/achievements\", async (req: Request, res: Response) => {\n    try {\n      const categoryId = req.params.categoryId;\n      const achievements = await storage.getAchievementsByCategory(categoryId);\n      res.json(achievements);\n    } catch (error: any) {\n      res.status(500).send(error.message);\n    }\n  });\n\n  // Get tournaments\n  app.get(\"/api/tournaments\", async (req: Request, res: Response) => {\n    try {\n      const tournaments = await storage.getTournaments();\n      res.json(tournaments);\n    } catch (error: any) {\n      res.status(500).send(error.message);\n    }\n  });\n\n  // Get upcoming matches\n  app.get(\"/api/matches/upcoming\", async (req: Request, res: Response) => {\n    try {\n      const matches = await storage.getUpcomingMatches();\n      res.json(matches);\n    } catch (error: any) {\n      res.status(500).send(error.message);\n    }\n  });\n\n  // Get past matches\n  app.get(\"/api/matches/past\", async (req: Request, res: Response) => {\n    try {\n      const matches = await storage.getPastMatches();\n      res.json(matches);\n    } catch (error: any) {\n      res.status(500).send(error.message);\n    }\n  });\n\n  // Get standings\n  app.get(\"/api/standings\", async (req: Request, res: Response) => {\n    try {\n      const tournamentId = req.query.tournamentId ? parseInt(req.query.tournamentId as string) : undefined;\n      const standings = await storage.getStandings(tournamentId);\n      res.json(standings);\n    } catch (error: any) {\n      res.status(500).send(error.message);\n    }\n  });\n\n  // Contact form submission\n  app.post(\"/api/contact\", async (req: Request, res: Response) => {\n    try {\n      const validatedData = insertContactSubmissionSchema.parse(req.body);\n      const submission = await storage.createContactSubmission(validatedData);\n      res.json(submission);\n    } catch (error: any) {\n      res.status(400).send(error.message);\n    }\n  });\n\n  // ============================================\n  // PROTECTED ROUTES (Authenticated Users)\n  // ============================================\n\n  // Get player profile with user info\n  app.get(\"/api/player/profile\", isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const user = req.user as any;\n      const userId = user.claims?.sub;\n      const profile = await storage.getPlayerProfile(userId);\n      if (!profile) {\n        res.status(404).send(\"Profile not found\");\n        return;\n      }\n      const dbUser = await storage.getUser(userId);\n      res.json({ ...profile, user: dbUser });\n    } catch (error: any) {\n      res.status(500).send(error.message);\n    }\n  });\n\n  // Update player profile\n  app.patch(\"/api/player/profile\", isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const user = req.user as any;\n      const userId = user.claims?.sub;\n      const validatedData = insertPlayerProfileSchema.partial().parse(req.body);\n      const profile = await storage.updatePlayerProfile(userId, validatedData);\n      res.json(profile);\n    } catch (error: any) {\n      res.status(400).send(error.message);\n    }\n  });\n\n  // Get player accounts receivable\n  app.get(\"/api/player/accounts\", isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const user = req.user as any;\n      const userId = user.claims?.sub;\n      const accounts = await storage.getAccountsByUser(userId);\n      res.json(accounts);\n    } catch (error: any) {\n      res.status(500).send(error.message);\n    }\n  });\n\n  // Get player payments\n  app.get(\"/api/player/payments\", isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const user = req.user as any;\n      const userId = user.claims?.sub;\n      const payments = await storage.getPaymentsByUser(userId);\n      res.json(payments);\n    } catch (error: any) {\n      res.status(500).send(error.message);\n    }\n  });\n\n  // Get player documents\n  app.get(\"/api/player/documents\", isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const user = req.user as any;\n      const userId = user.claims?.sub;\n      const documents = await storage.getDocumentsByUser(userId);\n      res.json(documents);\n    } catch (error: any) {\n      res.status(500).send(error.message);\n    }\n  });\n\n  // Upload document\n  app.post(\"/api/player/documents\", isAuthenticated, async (req: Request, res: Response) => {\n    try {\n      const user = req.user as any;\n      const userId = user.claims?.sub;\n      const validatedData = insertDocumentSchema.parse({ ...req.body, userId });\n      const document = await storage.createDocument(validatedData);\n      res.json(document);\n    } catch (error: any) {\n      res.status(400).send(error.message);\n    }\n  });\n\n  // ============================================\n  // ADMIN ROUTES\n  // ============================================\n\n  // --- User Management ---\n  app.get(\"/api/admin/users\", isAdmin, async (req: Request, res: Response) => {\n    try {\n      const allUsers = await db.select().from(users);\n      res.json(allUsers);\n    } catch (error: any) {\n      res.status(500).send(error.message);\n    }\n  });\n\n  app.patch(\"/api/admin/users/:id\", isAdmin, async (req: Request, res: Response) => {\n    try {\n      const userId = req.params.id;\n      const user = await storage.updateUser(userId, req.body);\n      res.json(user);\n    } catch (error: any) {\n      res.status(400).send(error.message);\n    }\n  });\n\n  // --- News Management ---\n  app.post(\"/api/admin/news\", isAdmin, async (req: Request, res: Response) => {\n    try {\n      const validatedData = insertNewsPostSchema.parse(req.body);\n      const post = await storage.createNewsPost(validatedData);\n      res.json(post);\n    } catch (error: any) {\n      res.status(400).send(error.message);\n    }\n  });\n\n  app.patch(\"/api/admin/news/:id\", isAdmin, async (req: Request, res: Response) => {\n    try {\n      const id = parseInt(req.params.id);\n      const validatedData = insertNewsPostSchema.partial().parse(req.body);\n      const post = await storage.updateNewsPost(id, validatedData);\n      res.json(post);\n    } catch (error: any) {\n      res.status(400).send(error.message);\n    }\n  });\n\n  app.delete(\"/api/admin/news/:id\", isAdmin, async (req: Request, res: Response) => {\n    try {\n      const id = parseInt(req.params.id);\n      const success = await storage.deleteNewsPost(id);\n      res.json({ success });\n    } catch (error: any) {\n      res.status(500).send(error.message);\n    }\n  });\n\n  // --- Gallery Management ---\n  app.post(\"/api/admin/galleries\", isAdmin, async (req: Request, res: Response) => {\n    try {\n      const validatedData = insertGalleryAlbumSchema.parse(req.body);\n      const album = await storage.createGalleryAlbum(validatedData);\n      res.json(album);\n    } catch (error: any) {\n      res.status(400).send(error.message);\n    }\n  });\n\n  app.post(\"/api/admin/galleries/:albumId/images\", isAdmin, async (req: Request, res: Response) => {\n    try {\n      const albumId = parseInt(req.params.albumId);\n      const validatedData = insertGalleryImageSchema.parse({ ...req.body, albumId });\n      const image = await storage.createGalleryImage(validatedData);\n      res.json(image);\n    } catch (error: any) {\n      res.status(400).send(error.message);\n    }\n  });\n\n  // --- Player Management ---\n  app.get(\"/api/admin/players\", isAdmin, async (req: Request, res: Response) => {\n    try {\n      const allProfiles = await db.select().from(playerProfiles);\n      const playersWithUsers = await Promise.all(\n        allProfiles.map(async (profile) => {\n          const user = await storage.getUser(profile.userId);\n          return { ...profile, user };\n        })\n      );\n      res.json(playersWithUsers);\n    } catch (error: any) {\n      res.status(500).send(error.message);\n    }\n  });\n\n  app.post(\"/api/admin/players\", isAdmin, async (req: Request, res: Response) => {\n    try {\n      const validatedData = insertPlayerProfileSchema.parse(req.body);\n      const profile = await storage.createPlayerProfile(validatedData);\n      res.json(profile);\n    } catch (error: any) {\n      res.status(400).send(error.message);\n    }\n  });\n\n  app.patch(\"/api/admin/players/:userId\", isAdmin, async (req: Request, res: Response) => {\n    try {\n      const userId = req.params.userId;\n      const validatedData = insertPlayerProfileSchema.partial().parse(req.body);\n      const profile = await storage.updatePlayerProfile(userId, validatedData);\n      res.json(profile);\n    } catch (error: any) {\n      res.status(400).send(error.message);\n    }\n  });\n\n  // --- Coach Management ---\n  app.post(\"/api/admin/coaches\", isAdmin, async (req: Request, res: Response) => {\n    try {\n      const validatedData = insertCoachSchema.parse(req.body);\n      const coach = await storage.createCoach(validatedData);\n      res.json(coach);\n    } catch (error: any) {\n      res.status(400).send(error.message);\n    }\n  });\n\n  app.patch(\"/api/admin/coaches/:id\", isAdmin, async (req: Request, res: Response) => {\n    try {\n      const id = parseInt(req.params.id);\n      const validatedData = insertCoachSchema.partial().parse(req.body);\n      const coach = await storage.updateCoach(id, validatedData);\n      res.json(coach);\n    } catch (error: any) {\n      res.status(400).send(error.message);\n    }\n  });\n\n  // --- Tournament Management ---\n  app.post(\"/api/admin/tournaments\", isAdmin, async (req: Request, res: Response) => {\n    try {\n      const validatedData = insertTournamentSchema.parse(req.body);\n      const tournament = await storage.createTournament(validatedData);\n      res.json(tournament);\n    } catch (error: any) {\n      res.status(400).send(error.message);\n    }\n  });\n\n  // --- Match Management ---\n  app.post(\"/api/admin/matches\", isAdmin, async (req: Request, res: Response) => {\n    try {\n      const validatedData = insertMatchSchema.parse(req.body);\n      const match = await storage.createMatch(validatedData);\n      res.json(match);\n    } catch (error: any) {\n      res.status(400).send(error.message);\n    }\n  });\n\n  app.patch(\"/api/admin/matches/:id\", isAdmin, async (req: Request, res: Response) => {\n    try {\n      const id = parseInt(req.params.id);\n      const validatedData = insertMatchSchema.partial().parse(req.body);\n      const match = await storage.updateMatch(id, validatedData);\n      res.json(match);\n    } catch (error: any) {\n      res.status(400).send(error.message);\n    }\n  });\n\n  // --- Standings Management ---\n  app.post(\"/api/admin/standings\", isAdmin, async (req: Request, res: Response) => {\n    try {\n      const validatedData = insertStandingSchema.parse(req.body);\n      const standing = await storage.createStanding(validatedData);\n      res.json(standing);\n    } catch (error: any) {\n      res.status(400).send(error.message);\n    }\n  });\n\n  app.patch(\"/api/admin/standings/:id\", isAdmin, async (req: Request, res: Response) => {\n    try {\n      const id = parseInt(req.params.id);\n      const validatedData = insertStandingSchema.partial().parse(req.body);\n      const standing = await storage.updateStanding(id, validatedData);\n      res.json(standing);\n    } catch (error: any) {\n      res.status(400).send(error.message);\n    }\n  });\n\n  // --- Payment Concept Management ---\n  app.get(\"/api/admin/payment-concepts\", isAdmin, async (req: Request, res: Response) => {\n    try {\n      const concepts = await storage.getPaymentConcepts();\n      res.json(concepts);\n    } catch (error: any) {\n      res.status(500).send(error.message);\n    }\n  });\n\n  app.post(\"/api/admin/payment-concepts\", isAdmin, async (req: Request, res: Response) => {\n    try {\n      const validatedData = insertPaymentConceptSchema.parse(req.body);\n      const concept = await storage.createPaymentConcept(validatedData);\n      res.json(concept);\n    } catch (error: any) {\n      res.status(400).send(error.message);\n    }\n  });\n\n  app.patch(\"/api/admin/payment-concepts/:id\", isAdmin, async (req: Request, res: Response) => {\n    try {\n      const id = parseInt(req.params.id);\n      const validatedData = insertPaymentConceptSchema.partial().parse(req.body);\n      const concept = await storage.updatePaymentConcept(id, validatedData);\n      res.json(concept);\n    } catch (error: any) {\n      res.status(400).send(error.message);\n    }\n  });\n\n  // --- Accounts Receivable Management ---\n  app.get(\"/api/admin/accounts\", isAdmin, async (req: Request, res: Response) => {\n    try {\n      const status = req.query.status as string | undefined;\n      const accounts = await storage.getAllAccounts(status);\n      res.json(accounts);\n    } catch (error: any) {\n      res.status(500).send(error.message);\n    }\n  });\n\n  app.post(\"/api/admin/accounts\", isAdmin, async (req: Request, res: Response) => {\n    try {\n      const validatedData = insertAccountReceivableSchema.parse(req.body);\n      const account = await storage.createAccountReceivable(validatedData);\n      res.json(account);\n    } catch (error: any) {\n      res.status(400).send(error.message);\n    }\n  });\n\n  app.patch(\"/api/admin/accounts/:id\", isAdmin, async (req: Request, res: Response) => {\n    try {\n      const id = parseInt(req.params.id);\n      const validatedData = insertAccountReceivableSchema.partial().parse(req.body);\n      const account = await storage.updateAccountReceivable(id, validatedData);\n      res.json(account);\n    } catch (error: any) {\n      res.status(400).send(error.message);\n    }\n  });\n\n  // --- Payment Recording ---\n  app.post(\"/api/admin/payments\", isAdmin, async (req: Request, res: Response) => {\n    try {\n      const validatedData = insertPaymentSchema.parse(req.body);\n      const payment = await storage.recordPayment(validatedData);\n      \n      // Update the corresponding account receivable to \"paid\"\n      if (validatedData.accountReceivableId) {\n        await storage.updateAccountReceivable(validatedData.accountReceivableId, {\n          status: \"paid\",\n        });\n      }\n      \n      res.json(payment);\n    } catch (error: any) {\n      res.status(400).send(error.message);\n    }\n  });\n\n  // --- Document Management ---\n  app.get(\"/api/admin/documents\", isAdmin, async (req: Request, res: Response) => {\n    try {\n      const documents = await storage.getPendingDocuments();\n      res.json(documents);\n    } catch (error: any) {\n      res.status(500).send(error.message);\n    }\n  });\n\n  app.patch(\"/api/admin/documents/:id\", isAdmin, async (req: Request, res: Response) => {\n    try {\n      const id = parseInt(req.params.id);\n      const validatedData = insertDocumentSchema.partial().parse(req.body);\n      const document = await storage.updateDocument(id, validatedData);\n      res.json(document);\n    } catch (error: any) {\n      res.status(400).send(error.message);\n    }\n  });\n\n  // --- Category Achievements ---\n  app.post(\"/api/admin/achievements\", isAdmin, async (req: Request, res: Response) => {\n    try {\n      const validatedData = insertCategoryAchievementSchema.parse(req.body);\n      const achievement = await storage.createAchievement(validatedData);\n      res.json(achievement);\n    } catch (error: any) {\n      res.status(400).send(error.message);\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":19250},"client/src/pages/AdminDashboard.tsx":{"content":"import { useAuth } from \"@/hooks/useAuth\";\nimport { useEffect } from \"react\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Avatar, AvatarImage, AvatarFallback } from \"@/components/ui/avatar\";\nimport { Users, DollarSign, Calendar, FileText, Trophy, Newspaper } from \"lucide-react\";\nimport { Link } from \"wouter\";\n\nexport default function AdminDashboard() {\n  const { toast } = useToast();\n  const { user, isAuthenticated, isLoading, isAdmin } = useAuth();\n\n  useEffect(() => {\n    if (!isLoading && !isAuthenticated) {\n      toast({\n        title: \"No autorizado\",\n        description: \"Iniciando sesión...\",\n        variant: \"destructive\",\n      });\n      setTimeout(() => {\n        window.location.href = \"/api/login\";\n      }, 500);\n    }\n  }, [isAuthenticated, isLoading, toast]);\n\n  useEffect(() => {\n    if (!isLoading && isAuthenticated && !isAdmin) {\n      toast({\n        title: \"Acceso Denegado\",\n        description: \"No tienes permisos de administrador\",\n        variant: \"destructive\",\n      });\n      setTimeout(() => {\n        window.location.href = \"/\";\n      }, 1000);\n    }\n  }, [isAuthenticated, isLoading, isAdmin, toast]);\n\n  if (isLoading || !isAuthenticated || !user || !isAdmin) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary mx-auto mb-4\" />\n          <p className=\"text-muted-foreground\">Cargando...</p>\n        </div>\n      </div>\n    );\n  }\n\n  const adminSections = [\n    {\n      title: \"Gestión de Usuarios\",\n      description: \"Administrar jugadores, entrenadores y permisos\",\n      icon: Users,\n      href: \"/admin/users\",\n      color: \"text-blue-600\",\n      bgColor: \"bg-blue-100 dark:bg-blue-900/20\",\n    },\n    {\n      title: \"Gestión Financiera\",\n      description: \"Pagos, cartera y reportes financieros\",\n      icon: DollarSign,\n      href: \"/admin/finance\",\n      color: \"text-green-600\",\n      bgColor: \"bg-green-100 dark:bg-green-900/20\",\n    },\n    {\n      title: \"Torneos y Partidos\",\n      description: \"Calendario, resultados y tablas\",\n      icon: Calendar,\n      href: \"/admin/tournaments\",\n      color: \"text-purple-600\",\n      bgColor: \"bg-purple-100 dark:bg-purple-900/20\",\n    },\n    {\n      title: \"Noticias\",\n      description: \"Publicar y editar noticias del club\",\n      icon: Newspaper,\n      href: \"/admin/news\",\n      color: \"text-orange-600\",\n      bgColor: \"bg-orange-100 dark:bg-orange-900/20\",\n    },\n    {\n      title: \"Categorías\",\n      description: \"Gestionar categorías, rosters y coaches\",\n      icon: Trophy,\n      href: \"/admin/categories\",\n      color: \"text-yellow-600\",\n      bgColor: \"bg-yellow-100 dark:bg-yellow-900/20\",\n    },\n    {\n      title: \"Documentos\",\n      description: \"Revisar y aprobar documentos\",\n      icon: FileText,\n      href: \"/admin/documents\",\n      color: \"text-red-600\",\n      bgColor: \"bg-red-100 dark:bg-red-900/20\",\n    },\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* Header */}\n      <header className=\"border-b bg-card\">\n        <div className=\"container mx-auto px-4 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-2xl font-bold\">Panel de Administración</h1>\n              <p className=\"text-sm text-muted-foreground\">Wild Dogs Hockey Club</p>\n            </div>\n            <div className=\"flex items-center gap-4\">\n              <Link href=\"/\">\n                <Button variant=\"outline\" size=\"sm\" data-testid=\"button-home\">\n                  Ver Sitio Público\n                </Button>\n              </Link>\n              <Avatar>\n                <AvatarImage src={user.profileImageUrl || undefined} />\n                <AvatarFallback>\n                  {user.firstName?.[0]}{user.lastName?.[0]}\n                </AvatarFallback>\n              </Avatar>\n              <div>\n                <div className=\"font-semibold\">{user.firstName} {user.lastName}</div>\n                <div className=\"text-sm text-muted-foreground\">Administrador</div>\n              </div>\n              <a href=\"/api/logout\">\n                <Button variant=\"outline\" size=\"sm\" data-testid=\"button-logout\">\n                  Cerrar Sesión\n                </Button>\n              </a>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* Main Content */}\n      <main className=\"container mx-auto px-4 py-8\">\n        {/* Welcome Section */}\n        <Card className=\"mb-8\">\n          <CardHeader>\n            <CardTitle className=\"text-2xl\">Bienvenido, {user.firstName}</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <p className=\"text-muted-foreground\">\n              Desde este panel puedes gestionar todos los aspectos del club Wild Dogs.\n              Selecciona una sección para comenzar.\n            </p>\n          </CardContent>\n        </Card>\n\n        {/* Admin Sections Grid */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {adminSections.map((section, index) => (\n            <Link key={index} href={section.href}>\n              <Card className=\"hover-elevate active-elevate-2 h-full\" data-testid={`admin-card-${index}`}>\n                <CardHeader>\n                  <div className={`w-12 h-12 rounded-lg ${section.bgColor} flex items-center justify-center mb-4`}>\n                    <section.icon className={`h-6 w-6 ${section.color}`} />\n                  </div>\n                  <CardTitle>{section.title}</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-sm text-muted-foreground\">{section.description}</p>\n                </CardContent>\n              </Card>\n            </Link>\n          ))}\n        </div>\n\n        {/* Quick Stats */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mt-8\">\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">Total Jugadores</CardTitle>\n              <Users className=\"h-4 w-4 text-muted-foreground\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold\" data-testid=\"stat-total-players\">150</div>\n              <p className=\"text-xs text-muted-foreground\">+12 este mes</p>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">Ingresos del Mes</CardTitle>\n              <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold\" data-testid=\"stat-monthly-income\">$42.5M</div>\n              <p className=\"text-xs text-muted-foreground\">+8% vs mes anterior</p>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">Partidos este Mes</CardTitle>\n              <Calendar className=\"h-4 w-4 text-muted-foreground\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold\" data-testid=\"stat-matches\">8</div>\n              <p className=\"text-xs text-muted-foreground\">5 victorias</p>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">Documentos Pendientes</CardTitle>\n              <FileText className=\"h-4 w-4 text-muted-foreground\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold\" data-testid=\"stat-pending-docs\">12</div>\n              <p className=\"text-xs text-muted-foreground\">Requieren revisión</p>\n            </CardContent>\n          </Card>\n        </div>\n      </main>\n    </div>\n  );\n}\n","size_bytes":8267},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/layout/Footer.tsx":{"content":"import { Mail, Phone, MapPin, Facebook, Instagram, Twitter } from \"lucide-react\";\nimport { Link } from \"wouter\";\n\nexport function Footer() {\n  return (\n    <footer className=\"bg-card border-t mt-auto\">\n      <div className=\"container mx-auto px-4 py-12\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n          {/* About */}\n          <div>\n            <h3 className=\"text-lg font-bold text-primary mb-4\">Wild Dogs Hockey Club</h3>\n            <p className=\"text-sm text-muted-foreground mb-4\">\n              Club de Hockey en Línea profesional en Bogotá, Colombia. Formación deportiva de excelencia para todas las edades.\n            </p>\n          </div>\n\n          {/* Quick Links */}\n          <div>\n            <h3 className=\"text-sm font-semibold mb-4\">Enlaces Rápidos</h3>\n            <ul className=\"space-y-2\">\n              <li>\n                <Link href=\"/nosotros\">\n                  <span className=\"text-sm text-muted-foreground hover:text-primary transition-colors\">\n                    Nosotros\n                  </span>\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/servicios\">\n                  <span className=\"text-sm text-muted-foreground hover:text-primary transition-colors\">\n                    Servicios\n                  </span>\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/categorias\">\n                  <span className=\"text-sm text-muted-foreground hover:text-primary transition-colors\">\n                    Categorías\n                  </span>\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/torneos\">\n                  <span className=\"text-sm text-muted-foreground hover:text-primary transition-colors\">\n                    Torneos\n                  </span>\n                </Link>\n              </li>\n            </ul>\n          </div>\n\n          {/* Contact Info */}\n          <div>\n            <h3 className=\"text-sm font-semibold mb-4\">Contacto</h3>\n            <ul className=\"space-y-3\">\n              <li className=\"flex items-start gap-2\">\n                <MapPin className=\"h-4 w-4 text-muted-foreground mt-0.5 flex-shrink-0\" />\n                <span className=\"text-sm text-muted-foreground\">\n                  Bogotá, Colombia\n                </span>\n              </li>\n              <li className=\"flex items-center gap-2\">\n                <Phone className=\"h-4 w-4 text-muted-foreground flex-shrink-0\" />\n                <a\n                  href=\"tel:+573001234567\"\n                  className=\"text-sm text-muted-foreground hover:text-primary transition-colors\"\n                >\n                  +57 300 123 4567\n                </a>\n              </li>\n              <li className=\"flex items-center gap-2\">\n                <Mail className=\"h-4 w-4 text-muted-foreground flex-shrink-0\" />\n                <a\n                  href=\"mailto:info@wilddogshockey.com\"\n                  className=\"text-sm text-muted-foreground hover:text-primary transition-colors\"\n                >\n                  info@wilddogshockey.com\n                </a>\n              </li>\n            </ul>\n          </div>\n\n          {/* Social Media */}\n          <div>\n            <h3 className=\"text-sm font-semibold mb-4\">Síguenos</h3>\n            <div className=\"flex gap-3\">\n              <a\n                href=\"https://facebook.com/wilddogshockey\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"p-2 rounded-md bg-muted hover-elevate active-elevate-2\"\n                data-testid=\"link-facebook\"\n                aria-label=\"Facebook\"\n              >\n                <Facebook className=\"h-5 w-5\" />\n              </a>\n              <a\n                href=\"https://instagram.com/wilddogshockey\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"p-2 rounded-md bg-muted hover-elevate active-elevate-2\"\n                data-testid=\"link-instagram\"\n                aria-label=\"Instagram\"\n              >\n                <Instagram className=\"h-5 w-5\" />\n              </a>\n              <a\n                href=\"https://twitter.com/wilddogshockey\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"p-2 rounded-md bg-muted hover-elevate active-elevate-2\"\n                data-testid=\"link-twitter\"\n                aria-label=\"Twitter\"\n              >\n                <Twitter className=\"h-5 w-5\" />\n              </a>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"mt-8 pt-8 border-t text-center\">\n          <p className=\"text-sm text-muted-foreground\">\n            © {new Date().getFullYear()} Wild Dogs Hockey Club. Todos los derechos reservados.\n          </p>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":4904},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/sidebar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, VariantProps } from \"class-variance-authority\"\nimport { PanelLeftIcon } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nfunction SidebarProvider({\n  defaultOpen = true,\n  open: openProp,\n  onOpenChange: setOpenProp,\n  className,\n  style,\n  children,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  defaultOpen?: boolean\n  open?: boolean\n  onOpenChange?: (open: boolean) => void\n}) {\n  const isMobile = useIsMobile()\n  const [openMobile, setOpenMobile] = React.useState(false)\n\n  // This is the internal state of the sidebar.\n  // We use openProp and setOpenProp for control from outside the component.\n  const [_open, _setOpen] = React.useState(defaultOpen)\n  const open = openProp ?? _open\n  const setOpen = React.useCallback(\n    (value: boolean | ((value: boolean) => boolean)) => {\n      const openState = typeof value === \"function\" ? value(open) : value\n      if (setOpenProp) {\n        setOpenProp(openState)\n      } else {\n        _setOpen(openState)\n      }\n\n      // This sets the cookie to keep the sidebar state.\n      document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n    },\n    [setOpenProp, open]\n  )\n\n  // Helper to toggle the sidebar.\n  const toggleSidebar = React.useCallback(() => {\n    return isMobile ? setOpenMobile((open) => !open) : setOpen((open) => !open)\n  }, [isMobile, setOpen, setOpenMobile])\n\n  // Adds a keyboard shortcut to toggle the sidebar.\n  React.useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (\n        event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n        (event.metaKey || event.ctrlKey)\n      ) {\n        event.preventDefault()\n        toggleSidebar()\n      }\n    }\n\n    window.addEventListener(\"keydown\", handleKeyDown)\n    return () => window.removeEventListener(\"keydown\", handleKeyDown)\n  }, [toggleSidebar])\n\n  // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n  // This makes it easier to style the sidebar with Tailwind classes.\n  const state = open ? \"expanded\" : \"collapsed\"\n\n  const contextValue = React.useMemo<SidebarContextProps>(\n    () => ({\n      state,\n      open,\n      setOpen,\n      isMobile,\n      openMobile,\n      setOpenMobile,\n      toggleSidebar,\n    }),\n    [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n  )\n\n  return (\n    <SidebarContext.Provider value={contextValue}>\n      <TooltipProvider delayDuration={0}>\n        <div\n          data-slot=\"sidebar-wrapper\"\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH,\n              \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n              ...style,\n            } as React.CSSProperties\n          }\n          className={cn(\n            \"group/sidebar-wrapper has-data-[variant=inset]:bg-sidebar flex min-h-svh w-full\",\n            className\n          )}\n          {...props}\n        >\n          {children}\n        </div>\n      </TooltipProvider>\n    </SidebarContext.Provider>\n  )\n}\n\nfunction Sidebar({\n  side = \"left\",\n  variant = \"sidebar\",\n  collapsible = \"offcanvas\",\n  className,\n  children,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  side?: \"left\" | \"right\"\n  variant?: \"sidebar\" | \"floating\" | \"inset\"\n  collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n}) {\n  const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n  if (collapsible === \"none\") {\n    return (\n      <div\n        data-slot=\"sidebar\"\n        className={cn(\n          \"bg-sidebar text-sidebar-foreground flex h-full w-[var(--sidebar-width)] flex-col\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n\n  if (isMobile) {\n    return (\n      <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n        <SheetContent\n          data-sidebar=\"sidebar\"\n          data-slot=\"sidebar\"\n          data-mobile=\"true\"\n          className=\"bg-sidebar text-sidebar-foreground w-[var(--sidebar-width)] p-0 [&>button]:hidden\"\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n            } as React.CSSProperties\n          }\n          side={side}\n        >\n          <SheetHeader className=\"sr-only\">\n            <SheetTitle>Sidebar</SheetTitle>\n            <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n          </SheetHeader>\n          <div className=\"flex h-full w-full flex-col\">{children}</div>\n        </SheetContent>\n      </Sheet>\n    )\n  }\n\n  return (\n    <div\n      className=\"group peer text-sidebar-foreground hidden md:block\"\n      data-state={state}\n      data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n      data-variant={variant}\n      data-side={side}\n      data-slot=\"sidebar\"\n    >\n      {/* This is what handles the sidebar gap on desktop */}\n      <div\n        data-slot=\"sidebar-gap\"\n        className={cn(\n          \"relative w-[var(--sidebar-width)] bg-transparent transition-[width] duration-200 ease-linear\",\n          \"group-data-[collapsible=offcanvas]:w-0\",\n          \"group-data-[side=right]:rotate-180\",\n          variant === \"floating\" || variant === \"inset\"\n            ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+var(--spacing-4))]\"\n            : \"group-data-[collapsible=icon]:w-[var(--sidebar-width-icon)]\"\n        )}\n      />\n      <div\n        data-slot=\"sidebar-container\"\n        className={cn(\n          \"fixed inset-y-0 z-10 hidden h-svh w-[var(--sidebar-width)] transition-[left,right,width] duration-200 ease-linear md:flex\",\n          side === \"left\"\n            ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n            : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n          // Adjust the padding for floating and inset variants.\n          variant === \"floating\" || variant === \"inset\"\n            ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+var(--spacing-4)+2px)]\"\n            : \"group-data-[collapsible=icon]:w-[var(--sidebar-width-icon)] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n          className\n        )}\n        {...props}\n      >\n        <div\n          data-sidebar=\"sidebar\"\n          data-slot=\"sidebar-inner\"\n          className=\"bg-sidebar group-data-[variant=floating]:border-sidebar-border flex h-full w-full flex-col group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:shadow-sm\"\n        >\n          {children}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction SidebarTrigger({\n  className,\n  onClick,\n  ...props\n}: React.ComponentProps<typeof Button>) {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      data-sidebar=\"trigger\"\n      data-slot=\"sidebar-trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeftIcon />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n}\n\nfunction SidebarRail({ className, ...props }: React.ComponentProps<\"button\">) {\n  const { toggleSidebar } = useSidebar()\n\n  // Note: Tailwind v3.4 doesn't support \"in-\" selectors. So the rail won't work perfectly.\n  return (\n    <button\n      data-sidebar=\"rail\"\n      data-slot=\"sidebar-rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"hover:after:bg-sidebar-border absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear group-data-[side=left]:-right-4 group-data-[side=right]:left-0 after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] sm:flex\",\n        \"in-data-[side=left]:cursor-w-resize in-data-[side=right]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"hover:group-data-[collapsible=offcanvas]:bg-sidebar group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarInset({ className, ...props }: React.ComponentProps<\"main\">) {\n  return (\n    <main\n      data-slot=\"sidebar-inset\"\n      className={cn(\n        \"bg-background relative flex w-full flex-1 flex-col\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow-sm md:peer-data-[variant=inset]:peer-data-[state=collapsed]:ml-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarInput({\n  className,\n  ...props\n}: React.ComponentProps<typeof Input>) {\n  return (\n    <Input\n      data-slot=\"sidebar-input\"\n      data-sidebar=\"input\"\n      className={cn(\"bg-background h-8 w-full shadow-none\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-header\"\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-footer\"\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof Separator>) {\n  return (\n    <Separator\n      data-slot=\"sidebar-separator\"\n      data-sidebar=\"separator\"\n      className={cn(\"bg-sidebar-border mx-2 w-auto\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-content\"\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroup({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-group\"\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupLabel({\n  className,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"div\"> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-group-label\"\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"text-sidebar-foreground/70 ring-sidebar-ring flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium outline-hidden transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:h-4 [&>svg]:w-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupAction({\n  className,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-group-action\"\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground absolute top-3.5 right-3 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 md:after:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupContent({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-group-content\"\n      data-sidebar=\"group-content\"\n      className={cn(\"w-full text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenu({ className, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n      data-slot=\"sidebar-menu\"\n      data-sidebar=\"menu\"\n      className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuItem({ className, ...props }: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"sidebar-menu-item\"\n      data-sidebar=\"menu-item\"\n      className={cn(\"group/menu-item relative\", className)}\n      {...props}\n    />\n  )\n}\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-hidden ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-data-[sidebar=menu-action]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:w-8! group-data-[collapsible=icon]:h-8! group-data-[collapsible=icon]:p-2! [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:p-0!\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction SidebarMenuButton({\n  asChild = false,\n  isActive = false,\n  variant = \"default\",\n  size = \"default\",\n  tooltip,\n  className,\n  ...props\n}: React.ComponentProps<\"button\"> & {\n  asChild?: boolean\n  isActive?: boolean\n  tooltip?: string | React.ComponentProps<typeof TooltipContent>\n} & VariantProps<typeof sidebarMenuButtonVariants>) {\n  const Comp = asChild ? Slot : \"button\"\n  const { isMobile, state } = useSidebar()\n\n  const button = (\n    <Comp\n      data-slot=\"sidebar-menu-button\"\n      data-sidebar=\"menu-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n      {...props}\n    />\n  )\n\n  if (!tooltip) {\n    return button\n  }\n\n  if (typeof tooltip === \"string\") {\n    tooltip = {\n      children: tooltip,\n    }\n  }\n\n  return (\n    <Tooltip>\n      <TooltipTrigger asChild>{button}</TooltipTrigger>\n      <TooltipContent\n        side=\"right\"\n        align=\"center\"\n        hidden={state !== \"collapsed\" || isMobile}\n        {...tooltip}\n      />\n    </Tooltip>\n  )\n}\n\nfunction SidebarMenuAction({\n  className,\n  asChild = false,\n  showOnHover = false,\n  ...props\n}: React.ComponentProps<\"button\"> & {\n  asChild?: boolean\n  showOnHover?: boolean\n}) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-menu-action\"\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground peer-hover/menu-button:text-sidebar-accent-foreground absolute top-1.5 right-1 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 md:after:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"peer-data-[active=true]/menu-button:text-sidebar-accent-foreground group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuBadge({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-menu-badge\"\n      data-sidebar=\"menu-badge\"\n      className={cn(\n        \"text-sidebar-foreground pointer-events-none absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums select-none\",\n        \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSkeleton({\n  className,\n  showIcon = false,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  showIcon?: boolean\n}) {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      data-slot=\"sidebar-menu-skeleton\"\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[var(--skeleton-width)] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n}\n\nfunction SidebarMenuSub({ className, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n      data-slot=\"sidebar-menu-sub\"\n      data-sidebar=\"menu-sub\"\n      className={cn(\n        \"border-sidebar-border mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l px-2.5 py-0.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSubItem({\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"sidebar-menu-sub-item\"\n      data-sidebar=\"menu-sub-item\"\n      className={cn(\"group/menu-sub-item relative\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSubButton({\n  asChild = false,\n  size = \"md\",\n  isActive = false,\n  className,\n  ...props\n}: React.ComponentProps<\"a\"> & {\n  asChild?: boolean\n  size?: \"sm\" | \"md\"\n  isActive?: boolean\n}) {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-menu-sub-button\"\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground active:bg-sidebar-accent active:text-sidebar-accent-foreground [&>svg]:text-sidebar-accent-foreground flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 outline outline-2 outline-transparent outline-offset-2 focus-visible:ring-2 disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":21846},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(`\n      after:content-[''] after:block after:absolute after:inset-0 after:rounded-full after:pointer-events-none after:border after:border-black/10 dark:after:border-white/10\n      relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full`,\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1592},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \".5625rem\", /* 9px */\n        md: \".375rem\", /* 6px */\n        sm: \".1875rem\", /* 3px */\n      },\n      colors: {\n        // Flat / base colors (regular buttons)\n        background: \"hsl(var(--background) / <alpha-value>)\",\n        foreground: \"hsl(var(--foreground) / <alpha-value>)\",\n        border: \"hsl(var(--border) / <alpha-value>)\",\n        input: \"hsl(var(--input) / <alpha-value>)\",\n        card: {\n          DEFAULT: \"hsl(var(--card) / <alpha-value>)\",\n          foreground: \"hsl(var(--card-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--card-border) / <alpha-value>)\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover) / <alpha-value>)\",\n          foreground: \"hsl(var(--popover-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--popover-border) / <alpha-value>)\",\n        },\n        primary: {\n          DEFAULT: \"hsl(var(--primary) / <alpha-value>)\",\n          foreground: \"hsl(var(--primary-foreground) / <alpha-value>)\",\n          border: \"var(--primary-border)\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary) / <alpha-value>)\",\n          foreground: \"hsl(var(--secondary-foreground) / <alpha-value>)\",\n          border: \"var(--secondary-border)\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted) / <alpha-value>)\",\n          foreground: \"hsl(var(--muted-foreground) / <alpha-value>)\",\n          border: \"var(--muted-border)\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent) / <alpha-value>)\",\n          foreground: \"hsl(var(--accent-foreground) / <alpha-value>)\",\n          border: \"var(--accent-border)\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive) / <alpha-value>)\",\n          foreground: \"hsl(var(--destructive-foreground) / <alpha-value>)\",\n          border: \"var(--destructive-border)\",\n        },\n        ring: \"hsl(var(--ring) / <alpha-value>)\",\n        chart: {\n          \"1\": \"hsl(var(--chart-1) / <alpha-value>)\",\n          \"2\": \"hsl(var(--chart-2) / <alpha-value>)\",\n          \"3\": \"hsl(var(--chart-3) / <alpha-value>)\",\n          \"4\": \"hsl(var(--chart-4) / <alpha-value>)\",\n          \"5\": \"hsl(var(--chart-5) / <alpha-value>)\",\n        },\n        sidebar: {\n          ring: \"hsl(var(--sidebar-ring) / <alpha-value>)\",\n          DEFAULT: \"hsl(var(--sidebar) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--sidebar-border) / <alpha-value>)\",\n        },\n        \"sidebar-primary\": {\n          DEFAULT: \"hsl(var(--sidebar-primary) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-primary-foreground) / <alpha-value>)\",\n          border: \"var(--sidebar-primary-border)\",\n        },\n        \"sidebar-accent\": {\n          DEFAULT: \"hsl(var(--sidebar-accent) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-accent-foreground) / <alpha-value>)\",\n          border: \"var(--sidebar-accent-border)\"\n        },\n        status: {\n          online: \"rgb(34 197 94)\",\n          away: \"rgb(245 158 11)\",\n          busy: \"rgb(239 68 68)\",\n          offline: \"rgb(156 163 175)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":4050},"replit.md":{"content":"# Wild Dogs Hockey Club - Web Application\n\n## Project Overview\nComprehensive web application for managing the Wild Dogs inline hockey club in Bogotá, Colombia. The platform provides public information pages, player management, financial tracking, and administrative tools.\n\n## Architecture\n- **Frontend**: React with TypeScript, Tailwind CSS, Shadcn UI components\n- **Backend**: Express.js with Node.js\n- **Database**: PostgreSQL with Drizzle ORM\n- **Authentication**: Replit Auth (OIDC)\n- **File Storage**: Local filesystem with future cloud storage integration\n\n## Key Features\n\n### Public Pages (Unauthenticated)\n- **Home**: Hero section, news slider, club stats, quick access grid, gallery preview, CTAs\n- **About**: Club history, mission, vision, values, leadership team, facilities\n- **Services**: Training programs, schedules, membership plans, enrollment process\n- **Categories**: 6 age divisions (Sub 8, 12, 14, 16, 18, Mayores) with player rosters, coaching staff, achievements\n- **Tournaments**: Upcoming matches, past results, standings tables, filters\n- **Contact**: Form submission, club information, map integration\n\n### Private Pages (Authenticated Players)\n- **Dashboard**: Personal profile, statistics, category info\n- **Payment Status**: View pending/paid accounts, payment history, download receipts\n- **Documents**: Upload required documents (ID, medical, EPS, image rights)\n- **Profile Management**: Update contact info, change photo\n\n### Admin Panel (Authenticated Administrators)\n- **User Management**: Approve/reject registrations, manage roles, filter users\n- **Content Management**: Create/edit news posts, manage galleries, update category info\n- **Player Management**: Update rosters, assign jersey numbers, manage statistics\n- **Tournament Management**: Create tournaments, record match results, update standings\n- **Financial Management**: Configure payment concepts, record payments, generate reports\n- **Financial Dashboard**: View income, accounts receivable, payment status by category\n\n## Database Schema\n- **Users & Auth**: sessions, users (with Replit Auth integration)\n- **Players**: player_profiles (extended user data with medical, guardian, stats)\n- **Structure**: categories, coaches, category_achievements\n- **Content**: news_posts, gallery_albums, gallery_images\n- **Tournaments**: tournaments, matches, standings\n- **Payments**: payment_concepts, accounts_receivable, payments, payment_applications\n- **Documents**: documents (player document uploads)\n- **Contact**: contact_submissions\n\n## User Roles\n- **Admin**: Full access to all features\n- **Coach**: View category info, manage team rosters\n- **Player**: View own profile, payments, upload documents\n- **Guardian**: Same as player (for minors)\n\n## Payment System\n- Administrators configure payment concepts (monthly fees, tournament registrations, etc.)\n- System automatically generates accounts receivable based on player category\n- Manual payment recording with receipt generation\n- Payment history and status tracking\n- Financial reports and dashboards\n\n## Design System\n- **Colors**: Deep hockey blue primary (220 85% 45%), energy orange accents (15 85% 52%)\n- **Typography**: Inter for display/body, JetBrains Mono for data/numbers\n- **Components**: Shadcn UI component library\n- **Layout**: Responsive mobile-first design\n- **Theme**: Light mode for public pages, dark mode for admin sections\n\n## Recent Changes\n- Initial schema definition with all required tables\n- Image generation for hero, categories, placeholders\n- Design guidelines established for sports club aesthetic\n","size_bytes":3585},"client/src/pages/CategoryDetail.tsx":{"content":"import { useParams } from \"wouter\";\nimport { PublicNav } from \"@/components/layout/PublicNav\";\nimport { Footer } from \"@/components/layout/Footer\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Trophy, Clock, Target } from \"lucide-react\";\nimport type { PlayerProfile, User, Coach, CategoryAchievement } from \"@shared/schema\";\nimport playerPlaceholder from \"@assets/generated_images/Player_portrait_placeholder_d8c2b3f0.png\";\nimport coachPlaceholder from \"@assets/generated_images/Coach_portrait_placeholder_9533f352.png\";\nimport sub8Image from \"@assets/generated_images/Sub_8_category_action_a72d36d1.png\";\nimport sub12Image from \"@assets/generated_images/Sub_12_category_action_b13c69c9.png\";\nimport sub14Image from \"@assets/generated_images/Sub_14_category_action_8361893f.png\";\nimport sub16Image from \"@assets/generated_images/Sub_16_category_action_736df6df.png\";\nimport sub18Image from \"@assets/generated_images/Sub_18_category_action_dd3bdc31.png\";\nimport mayoresImage from \"@assets/generated_images/Mayores_category_action_e9aef5c0.png\";\n\ntype PlayerWithUser = PlayerProfile & { user: User };\n\nexport default function CategoryDetail() {\n  const params = useParams();\n  const categoryId = params.id as string;\n\n  const { data: players = [], isLoading: playersLoading } = useQuery<PlayerWithUser[]>({\n    queryKey: [\"/api/categories\", categoryId, \"players\"],\n  });\n\n  const { data: coaches = [], isLoading: coachesLoading } = useQuery<Coach[]>({\n    queryKey: [\"/api/categories\", categoryId, \"coaches\"],\n  });\n\n  const { data: achievements = [], isLoading: achievementsLoading } = useQuery<CategoryAchievement[]>({\n    queryKey: [\"/api/categories\", categoryId, \"achievements\"],\n  });\n\n  const categoryImages: Record<string, string> = {\n    sub8: sub8Image,\n    sub12: sub12Image,\n    sub14: sub14Image,\n    sub16: sub16Image,\n    sub18: sub18Image,\n    mayores: mayoresImage,\n  };\n\n  const categoryInfo: Record<string, any> = {\n    sub8: {\n      name: \"Sub 8\",\n      ageRange: \"Menores de 8 años\",\n      description: \"Introducción al hockey en línea con énfasis en diversión y desarrollo de habilidades básicas motoras.\",\n      schedule: \"Martes y Jueves, 4:00 PM - 5:30 PM\",\n      objectives: [\n        \"Desarrollar habilidades motoras básicas\",\n        \"Aprender fundamentos del patinaje\",\n        \"Manejo básico del stick y puck\",\n        \"Fomentar el amor por el deporte\",\n      ],\n    },\n    sub12: {\n      name: \"Sub 12\",\n      ageRange: \"Menores de 12 años\",\n      description: \"Desarrollo técnico progresivo con introducción a conceptos tácticos básicos del juego.\",\n      schedule: \"Martes y Jueves, 4:00 PM - 5:30 PM\",\n      objectives: [\n        \"Perfeccionar técnica individual\",\n        \"Comprender posiciones de juego\",\n        \"Trabajar en equipo efectivamente\",\n        \"Participar en torneos locales\",\n      ],\n    },\n    sub14: {\n      name: \"Sub 14\",\n      ageRange: \"Menores de 14 años\",\n      description: \"Formación competitiva con énfasis en táctica colectiva y desarrollo físico.\",\n      schedule: \"Lunes, Miércoles y Viernes, 5:30 PM - 7:00 PM\",\n      objectives: [\n        \"Dominar sistemas tácticos\",\n        \"Mejorar condición física específica\",\n        \"Desarrollar liderazgo en cancha\",\n        \"Competir a nivel regional\",\n      ],\n    },\n    sub16: {\n      name: \"Sub 16\",\n      ageRange: \"Menores de 16 años\",\n      description: \"Alto nivel competitivo con preparación para categorías mayores.\",\n      schedule: \"Lunes, Miércoles y Viernes, 5:30 PM - 7:00 PM\",\n      objectives: [\n        \"Excelencia técnico-táctica\",\n        \"Preparación mental competitiva\",\n        \"Representación nacional\",\n        \"Proyección deportiva avanzada\",\n      ],\n    },\n    sub18: {\n      name: \"Sub 18\",\n      ageRange: \"Menores de 18 años\",\n      description: \"Categoría pre-profesional con enfoque en alto rendimiento.\",\n      schedule: \"Lunes, Miércoles y Viernes, 7:00 PM - 9:00 PM\",\n      objectives: [\n        \"Perfeccionamiento integral\",\n        \"Transición a nivel senior\",\n        \"Competencia nacional e internacional\",\n        \"Desarrollo profesional\",\n      ],\n    },\n    mayores: {\n      name: \"Mayores\",\n      ageRange: \"18 años en adelante\",\n      description: \"Competencia adulta de alto nivel en torneos locales y nacionales.\",\n      schedule: \"Lunes, Miércoles y Viernes, 7:00 PM - 9:00 PM\",\n      objectives: [\n        \"Competencia profesional\",\n        \"Representación del club a máximo nivel\",\n        \"Torneos nacionales\",\n        \"Excelencia deportiva\",\n      ],\n    },\n  };\n\n  const info = categoryInfo[categoryId] || categoryInfo.sub8;\n  const heroImage = categoryImages[categoryId] || sub8Image;\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <PublicNav />\n\n      {/* Hero */}\n      <section className=\"relative h-[60vh] flex items-center justify-center overflow-hidden\">\n        <div className=\"absolute inset-0 z-0\">\n          <img src={heroImage} alt={info.name} className=\"w-full h-full object-cover\" />\n          <div className=\"absolute inset-0 bg-gradient-to-t from-background via-background/60 to-transparent\" />\n        </div>\n        <div className=\"relative z-10 container mx-auto px-4 text-center\">\n          <h1 className=\"text-6xl md:text-8xl font-black text-white mb-4 tracking-tight uppercase drop-shadow-lg\">\n            {info.name}\n          </h1>\n          <p className=\"text-2xl text-white/90 drop-shadow-md\">{info.ageRange}</p>\n        </div>\n      </section>\n\n      {/* Category Info */}\n      <section className=\"py-20\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"max-w-6xl mx-auto\">\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-12\">\n              <Card>\n                <CardHeader>\n                  <Clock className=\"h-8 w-8 text-primary mb-2\" />\n                  <CardTitle>Horarios</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-muted-foreground\">{info.schedule}</p>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardHeader>\n                  <Target className=\"h-8 w-8 text-primary mb-2\" />\n                  <CardTitle>Descripción</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-muted-foreground\">{info.description}</p>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardHeader>\n                  <Trophy className=\"h-8 w-8 text-primary mb-2\" />\n                  <CardTitle>Nivel</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-muted-foreground\">\n                    {categoryId === \"sub8\" || categoryId === \"sub12\"\n                      ? \"Formativo\"\n                      : categoryId === \"mayores\"\n                      ? \"Elite\"\n                      : \"Competitivo\"}\n                  </p>\n                </CardContent>\n              </Card>\n            </div>\n\n            <Card className=\"mb-12\">\n              <CardHeader>\n                <CardTitle className=\"text-2xl\">Objetivos Formativos</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <ul className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                  {info.objectives.map((objective: string, index: number) => (\n                    <li key={index} className=\"flex items-start gap-2\">\n                      <div className=\"w-1.5 h-1.5 rounded-full bg-primary mt-2 flex-shrink-0\" />\n                      <span>{objective}</span>\n                    </li>\n                  ))}\n                </ul>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* Player Roster */}\n      <section className=\"py-20 bg-muted/30\">\n        <div className=\"container mx-auto px-4\">\n          <h2 className=\"text-4xl font-bold mb-12 text-center\">Roster de Jugadores</h2>\n          {playersLoading ? (\n            <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\">\n              {[1, 2, 3, 4].map((i) => (\n                <Card key={i}>\n                  <CardContent className=\"p-6\">\n                    <div className=\"w-24 h-24 rounded-full bg-muted animate-pulse mx-auto mb-4\" />\n                    <div className=\"h-4 bg-muted rounded animate-pulse mb-2\" />\n                    <div className=\"h-3 bg-muted rounded animate-pulse w-2/3 mx-auto\" />\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          ) : players.length > 0 ? (\n            <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\">\n              {players.map((player) => (\n                <Card key={player.id} className=\"hover-elevate active-elevate-2\" data-testid={`player-card-${player.id}`}>\n                  <CardContent className=\"p-6 text-center\">\n                    <div className=\"w-24 h-24 rounded-full bg-muted mx-auto mb-4 overflow-hidden\">\n                      <img\n                        src={player.user.profileImageUrl || playerPlaceholder}\n                        alt={`${player.user.firstName} ${player.user.lastName}`}\n                        className=\"w-full h-full object-cover\"\n                      />\n                    </div>\n                    <div className=\"text-3xl font-black text-primary mb-2\">\n                      #{player.jerseyNumber || \"00\"}\n                    </div>\n                    <h3 className=\"font-bold mb-1\">\n                      {player.user.firstName} {player.user.lastName}\n                    </h3>\n                    <p className=\"text-sm text-muted-foreground capitalize mb-2\">\n                      {player.position || \"Jugador\"}\n                    </p>\n                    {(player.goals || player.assists || player.gamesPlayed) ? (\n                      <div className=\"text-xs text-muted-foreground space-y-1 pt-2 border-t\">\n                        <div>PJ: {player.gamesPlayed || 0}</div>\n                        <div>G: {player.goals || 0} | A: {player.assists || 0}</div>\n                      </div>\n                    ) : null}\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          ) : (\n            <Card className=\"p-12\">\n              <div className=\"text-center text-muted-foreground\">\n                <p>No hay jugadores registrados en esta categoría aún.</p>\n              </div>\n            </Card>\n          )}\n        </div>\n      </section>\n\n      {/* Coaching Staff */}\n      <section className=\"py-20\">\n        <div className=\"container mx-auto px-4\">\n          <h2 className=\"text-4xl font-bold mb-12 text-center\">Cuerpo Técnico</h2>\n          {coachesLoading ? (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              {[1, 2].map((i) => (\n                <Card key={i}>\n                  <CardContent className=\"p-6\">\n                    <div className=\"w-32 h-32 rounded-full bg-muted animate-pulse mx-auto mb-4\" />\n                    <div className=\"h-4 bg-muted rounded animate-pulse mb-2\" />\n                    <div className=\"h-3 bg-muted rounded animate-pulse\" />\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          ) : coaches.length > 0 ? (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 max-w-6xl mx-auto\">\n              {coaches.map((coach) => (\n                <Card key={coach.id} data-testid={`coach-card-${coach.id}`}>\n                  <CardContent className=\"p-6 text-center\">\n                    <div className=\"w-32 h-32 rounded-full bg-muted mx-auto mb-4 overflow-hidden\">\n                      <img\n                        src={coach.photoUrl || coachPlaceholder}\n                        alt={coach.name}\n                        className=\"w-full h-full object-cover\"\n                      />\n                    </div>\n                    <h3 className=\"font-bold mb-1\">{coach.name}</h3>\n                    <p className=\"text-sm text-primary mb-2\">{coach.role}</p>\n                    {coach.experience && (\n                      <p className=\"text-xs text-muted-foreground\">{coach.experience}</p>\n                    )}\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          ) : (\n            <Card className=\"p-12 max-w-2xl mx-auto\">\n              <div className=\"text-center text-muted-foreground\">\n                <p>Información del cuerpo técnico próximamente.</p>\n              </div>\n            </Card>\n          )}\n        </div>\n      </section>\n\n      {/* Achievements */}\n      {achievements.length > 0 && (\n        <section className=\"py-20 bg-muted/30\">\n          <div className=\"container mx-auto px-4\">\n            <h2 className=\"text-4xl font-bold mb-12 text-center\">Logros de la Categoría</h2>\n            <div className=\"max-w-3xl mx-auto space-y-4\">\n              {achievements.map((achievement) => (\n                <Card key={achievement.id} className=\"hover-elevate active-elevate-2\" data-testid={`achievement-${achievement.id}`}>\n                  <CardContent className=\"p-6\">\n                    <div className=\"flex items-center gap-4\">\n                      <div className=\"flex-shrink-0\">\n                        <div className=\"w-16 h-16 rounded-full bg-primary/10 flex items-center justify-center\">\n                          <Trophy className=\"h-8 w-8 text-primary\" />\n                        </div>\n                      </div>\n                      <div>\n                        <div className=\"text-sm font-mono text-muted-foreground mb-1\">{achievement.year}</div>\n                        <div className=\"text-lg font-semibold\">{achievement.title}</div>\n                        {achievement.description && (\n                          <p className=\"text-sm text-muted-foreground mt-1\">{achievement.description}</p>\n                        )}\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </div>\n        </section>\n      )}\n\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":14318},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/pages/About.tsx":{"content":"import { PublicNav } from \"@/components/layout/PublicNav\";\nimport { Footer } from \"@/components/layout/Footer\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Trophy, Heart, Target, Users } from \"lucide-react\";\nimport celebrationImage from \"@assets/generated_images/Team_celebration_photo_ef5bea2c.png\";\n\nexport default function About() {\n  const values = [\n    {\n      icon: Trophy,\n      title: \"Excelencia\",\n      description: \"Buscamos la mejora continua en cada entrenamiento y partido, desarrollando el máximo potencial de cada jugador.\",\n    },\n    {\n      icon: Heart,\n      title: \"Pasión\",\n      description: \"El amor por el hockey y el deporte nos impulsa a dar lo mejor de nosotros en cada momento.\",\n    },\n    {\n      icon: Users,\n      title: \"Trabajo en Equipo\",\n      description: \"El éxito se construye juntos. Cada miembro del equipo es fundamental para alcanzar nuestras metas.\",\n    },\n    {\n      icon: Target,\n      title: \"Disciplina\",\n      description: \"La constancia y el compromiso son la base del crecimiento deportivo y personal.\",\n    },\n  ];\n\n  const leadership = [\n    { name: \"Carlos Rodríguez\", role: \"Presidente\", experience: \"15 años en hockey profesional\" },\n    { name: \"Ana María García\", role: \"Directora Técnica\", experience: \"Entrenadora certificada nivel III\" },\n    { name: \"Luis Fernando Torres\", role: \"Director Administrativo\", experience: \"MBA en Gestión Deportiva\" },\n    { name: \"María Fernanda López\", role: \"Coordinadora Categorías Menores\", experience: \"Especialista en formación deportiva infantil\" },\n  ];\n\n  const achievements = [\n    { year: 2023, title: \"Campeones Liga Nacional Sub 18\" },\n    { year: 2023, title: \"Subcampeones Torneo Bogotá Mayores\" },\n    { year: 2022, title: \"Campeones Copa Colombia Sub 16\" },\n    { year: 2022, title: \"Mejor Club Formativo del Año\" },\n    { year: 2021, title: \"Campeones Regionales Sub 14\" },\n  ];\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <PublicNav />\n\n      {/* Hero Section */}\n      <section className=\"relative py-20 md:py-32 bg-primary text-primary-foreground\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"max-w-4xl mx-auto text-center\">\n            <h1 className=\"text-5xl md:text-7xl font-black mb-6 tracking-tight uppercase\">\n              Nosotros\n            </h1>\n            <p className=\"text-xl md:text-2xl opacity-90\">\n              Conoce la historia y los valores que nos hacen el mejor club de hockey en línea de Bogotá\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* History */}\n      <section className=\"py-20\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center max-w-6xl mx-auto\">\n            <div>\n              <h2 className=\"text-4xl font-bold mb-6\">Nuestra Historia</h2>\n              <div className=\"space-y-4 text-muted-foreground leading-relaxed\">\n                <p>\n                  El Club Wild Dogs nació en 2013 con un sueño: crear un espacio donde los jóvenes de Bogotá pudieran desarrollar su pasión por el hockey en línea en un ambiente profesional y familiar.\n                </p>\n                <p>\n                  Fundado por un grupo de entusiastas del hockey que vieron la necesidad de formar un club que no solo se enfocara en la competencia, sino también en la formación integral de deportistas, Wild Dogs ha crecido hasta convertirse en uno de los clubes más respetados de Colombia.\n                </p>\n                <p>\n                  A lo largo de más de 10 años, hemos formado cientos de jugadores, ganado numerosos campeonatos y, lo más importante, creado una comunidad unida por el amor al deporte.\n                </p>\n                <p>\n                  Hoy contamos con 6 categorías competitivas, instalaciones de primer nivel y un cuerpo técnico altamente capacitado que trabaja día a día para mantener vivo el espíritu Wild Dogs.\n                </p>\n              </div>\n            </div>\n            <div className=\"rounded-lg overflow-hidden\">\n              <img\n                src={celebrationImage}\n                alt=\"Wild Dogs Team Celebration\"\n                className=\"w-full h-full object-cover\"\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Mission & Vision */}\n      <section className=\"py-20 bg-muted/30\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 max-w-6xl mx-auto\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-3xl\">Misión</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-muted-foreground leading-relaxed\">\n                  Formar deportistas integrales a través del hockey en línea, promoviendo valores de trabajo en equipo, disciplina y excelencia deportiva. Brindar a nuestros jugadores las herramientas técnicas y tácticas necesarias para competir al más alto nivel mientras desarrollan habilidades para la vida.\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-3xl\">Visión</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-muted-foreground leading-relaxed\">\n                  Ser reconocidos como el club líder en formación de hockey en línea en Colombia, expandiendo nuestra influencia a nivel internacional y siendo referente en desarrollo deportivo juvenil. Aspiramos a que nuestros jugadores representen a Colombia en competencias internacionales y sean ejemplo de excelencia deportiva y humana.\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* Values */}\n      <section className=\"py-20\">\n        <div className=\"container mx-auto px-4\">\n          <h2 className=\"text-4xl font-bold mb-12 text-center\">Nuestros Valores</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 max-w-6xl mx-auto\">\n            {values.map((value, index) => (\n              <Card key={index} className=\"text-center\" data-testid={`value-card-${index}`}>\n                <CardContent className=\"pt-8 pb-6\">\n                  <div className=\"inline-flex items-center justify-center w-16 h-16 rounded-full bg-primary/10 mb-4\">\n                    <value.icon className=\"h-8 w-8 text-primary\" />\n                  </div>\n                  <h3 className=\"text-xl font-bold mb-3\">{value.title}</h3>\n                  <p className=\"text-sm text-muted-foreground\">{value.description}</p>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Leadership */}\n      <section className=\"py-20 bg-muted/30\">\n        <div className=\"container mx-auto px-4\">\n          <h2 className=\"text-4xl font-bold mb-12 text-center\">Junta Directiva</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 max-w-6xl mx-auto\">\n            {leadership.map((leader, index) => (\n              <Card key={index} data-testid={`leader-card-${index}`}>\n                <CardContent className=\"pt-6\">\n                  <div className=\"w-24 h-24 rounded-full bg-muted mx-auto mb-4\" />\n                  <h3 className=\"text-lg font-bold text-center mb-1\">{leader.name}</h3>\n                  <p className=\"text-sm text-primary text-center mb-2\">{leader.role}</p>\n                  <p className=\"text-xs text-muted-foreground text-center\">{leader.experience}</p>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Achievements */}\n      <section className=\"py-20\">\n        <div className=\"container mx-auto px-4\">\n          <h2 className=\"text-4xl font-bold mb-12 text-center\">Logros y Reconocimientos</h2>\n          <div className=\"max-w-3xl mx-auto\">\n            <div className=\"space-y-4\">\n              {achievements.map((achievement, index) => (\n                <Card key={index} className=\"hover-elevate active-elevate-2\" data-testid={`achievement-${index}`}>\n                  <CardContent className=\"p-6\">\n                    <div className=\"flex items-center gap-4\">\n                      <div className=\"flex-shrink-0\">\n                        <div className=\"w-16 h-16 rounded-full bg-primary/10 flex items-center justify-center\">\n                          <Trophy className=\"h-8 w-8 text-primary\" />\n                        </div>\n                      </div>\n                      <div>\n                        <div className=\"text-sm font-mono text-muted-foreground mb-1\">{achievement.year}</div>\n                        <div className=\"text-lg font-semibold\">{achievement.title}</div>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Facilities */}\n      <section className=\"py-20 bg-muted/30\">\n        <div className=\"container mx-auto px-4\">\n          <h2 className=\"text-4xl font-bold mb-12 text-center\">Nuestras Instalaciones</h2>\n          <div className=\"max-w-4xl mx-auto\">\n            <Card>\n              <CardContent className=\"p-8\">\n                <div className=\"space-y-4 text-muted-foreground leading-relaxed\">\n                  <p>\n                    <strong>Sede Principal:</strong> Contamos con una moderna pista de hockey en línea ubicada en el norte de Bogotá, con superficie de alta calidad, iluminación profesional y gradas para espectadores.\n                  </p>\n                  <p>\n                    <strong>Área de Entrenamiento:</strong> Espacios dedicados para preparación física, técnica individual y análisis táctico con equipamiento de última generación.\n                  </p>\n                  <p>\n                    <strong>Vestidores:</strong> Amplios vestidores separados por categorías, con casilleros personales y duchas de agua caliente.\n                  </p>\n                  <p>\n                    <strong>Sala de Reuniones:</strong> Espacio equipado con pantallas y pizarras para charlas técnicas y análisis de video.\n                  </p>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":10597},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"server/db.ts":{"content":"import { Pool, neonConfig } from '@neondatabase/serverless';\nimport { drizzle } from 'drizzle-orm/neon-serverless';\nimport ws from \"ws\";\nimport * as schema from \"@shared/schema\";\n\nneonConfig.webSocketConstructor = ws;\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\n    \"DATABASE_URL must be set. Did you forget to provision a database?\",\n  );\n}\n\nexport const pool = new Pool({ connectionString: process.env.DATABASE_URL });\nexport const db = drizzle({ client: pool, schema });\n","size_bytes":483},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/hooks/useAuth.ts":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport type { User } from \"@shared/schema\";\n\nexport function useAuth() {\n  const { data: user, isLoading } = useQuery<User>({\n    queryKey: [\"/api/auth/user\"],\n    retry: false,\n  });\n\n  return {\n    user,\n    isLoading,\n    isAuthenticated: !!user,\n    isAdmin: user?.role === \"admin\",\n    isCoach: user?.role === \"coach\",\n    isPlayer: user?.role === \"player\",\n    isGuardian: user?.role === \"guardian\",\n  };\n}\n","size_bytes":463},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    // h-9 to match icon buttons and default buttons.\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":844},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527}},"version":2}